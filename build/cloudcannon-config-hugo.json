{
  "$ref": "#/definitions/HugoConfiguration",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AddOption": {
      "additionalProperties": false,
      "properties": {
        "base_path": {
          "description": "Enforces a path for new files to be created in, regardless of path the user is currently navigated to within the collection file list. Relative to the path of the collection defined in collection. Defaults to the path within the collection the user is currently navigated to.",
          "markdownDescription": "Enforces a path for new files to be created in, regardless of path the user is currently\nnavigated to within the collection file list. Relative to the path of the collection defined in\ncollection. Defaults to the path within the collection the user is currently navigated to.",
          "type": "string"
        },
        "collection": {
          "description": "Sets which collection this action is creating a file in. This is used when matching the value for schema. Defaults to the containing collection these `add_options` are configured in.",
          "markdownDescription": "Sets which collection this action is creating a file in. This is used when matching the value\nfor schema. Defaults to the containing collection these `add_options` are configured in.",
          "type": "string"
        },
        "default_content_file": {
          "description": "The path to a file used to populate the initial contents of a new file if no schemas are configured. We recommend using schemas, and this is ignored if a schema is available.",
          "markdownDescription": "The path to a file used to populate the initial contents of a new file if no schemas are\nconfigured. We recommend using schemas, and this is ignored if a schema is available.",
          "type": "string"
        },
        "editor": {
          "$ref": "#/definitions/EditorKey",
          "description": "The editor to open the new file in. Defaults to an appropriate editor for new file's type if possible. If no default editor can be calculated, or the editor does not support the new file type, a warning is shown in place of the editor.",
          "markdownDescription": "The editor to open the new file in. Defaults to an appropriate editor for new file's type if\npossible. If no default editor can be calculated, or the editor does not support the new file\ntype, a warning is shown in place of the editor."
        },
        "icon": {
          "$ref": "#/definitions/Icon",
          "description": "The icon next to the text in the menu item. Defaults to using icon from the matching schema if set, then falls back to add.",
          "markdownDescription": "The icon next to the text in the menu item. Defaults to using icon from the matching schema if\nset, then falls back to add."
        },
        "name": {
          "description": "The text displayed for the menu item. Defaults to using name from the matching schema if set.",
          "markdownDescription": "The text displayed for the menu item. Defaults to using name from the matching schema if set.",
          "type": "string"
        },
        "schema": {
          "description": "The schema that new files are created from with this action. This schema is not restricted to the containing collection, and is instead relative to the collection specified with collection. Defaults to default if schemas are configured for the collection.",
          "markdownDescription": "The schema that new files are created from with this action. This schema is not restricted to\nthe containing collection, and is instead relative to the collection specified with collection.\nDefaults to default if schemas are configured for the collection.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArrayInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ArrayInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "array",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ArrayInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeArray",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "preview": {
          "$ref": "#/definitions/ObjectPreview",
          "description": "The preview definition for changing the way data within an array input's items are previewed before being expanded. If the input has structures, the preview from the structure value is used instead.",
          "markdownDescription": "The preview definition for changing the way data within an array input's items are previewed\nbefore being expanded. If the input has structures, the preview from the structure value is\nused instead."
        },
        "structures": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Structure"
            }
          ],
          "description": "Provides data formats for value of this object. When choosing an item, team members are prompted to choose from a number of values you have defined.",
          "markdownDescription": "Provides data formats for value of this object. When choosing an item, team members are\nprompted to choose from a number of values you have defined."
        }
      },
      "type": "object"
    },
    "BaseInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/BaseInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "$ref": "#/definitions/InputType",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with."
        }
      },
      "type": "object"
    },
    "BaseInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        }
      },
      "type": "object"
    },
    "BlockEditable": {
      "additionalProperties": false,
      "properties": {
        "allow_custom_markup": {
          "description": "Defines if the content can contain \"custom markup\". It is not recommended to have this option turned on. Defaults to true for non-content editable regions, false otherwise.",
          "markdownDescription": "Defines if the content can contain \"custom markup\". It is not recommended to have this option\nturned on. Defaults to true for non-content editable regions, false otherwise.",
          "type": "boolean"
        },
        "allowed_sources": {
          "description": "If you have one or more DAMs connected to your site, you can use this key to list which asset sources can be uploaded to and selected from.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "If you have one or more DAMs connected to your site, you can use this key to list which asset\nsources can be uploaded to and selected from.",
          "type": "array"
        },
        "blockquote": {
          "description": "Enables a control to wrap blocks of text in block quotes.",
          "markdownDescription": "Enables a control to wrap blocks of text in block quotes.",
          "type": "boolean"
        },
        "bold": {
          "description": "Enables a control to set selected text to bold.",
          "markdownDescription": "Enables a control to set selected text to bold.",
          "type": "boolean"
        },
        "bulletedlist": {
          "description": "Enables a control to insert an unordered list, or to convert selected blocks of text into a unordered list.",
          "markdownDescription": "Enables a control to insert an unordered list, or to convert selected blocks of text into a\nunordered list.",
          "type": "boolean"
        },
        "center": {
          "description": "Enables a control to center align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to center align text by toggling a class name for a block of text. The value\nis the class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "code": {
          "description": "Enables a control to set selected text to inline code, and unselected blocks of text to code blocks.",
          "markdownDescription": "Enables a control to set selected text to inline code, and unselected blocks of text to code\nblocks.",
          "type": "boolean"
        },
        "copyformatting": {
          "description": "Enables a control to copy formatting from text to other text. Only applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other styles or formatting.",
          "markdownDescription": "Enables a control to copy formatting from text to other text. Only applies to formatting from\n`bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other\nstyles or formatting.",
          "type": "boolean"
        },
        "correct_orientation": {
          "default": true,
          "description": "Controls whether or not the JPEG headers defining how an image should be rotated before being displayed is baked into images prior to upload.",
          "markdownDescription": "Controls whether or not the JPEG headers defining how an image should be rotated before being\ndisplayed is baked into images prior to upload.",
          "type": "boolean"
        },
        "embed": {
          "description": "Enables a control to insert a region of raw HTML, including YouTube, Vimeo, Tweets, and other media. Embedded content is sanitized to mitigate XSS risks, which includes removing style tags. Embeds containing script tags are not loaded in the editor.",
          "markdownDescription": "Enables a control to insert a region of raw HTML, including YouTube, Vimeo, Tweets, and other\nmedia. Embedded content is sanitized to mitigate XSS risks, which includes removing style tags.\nEmbeds containing script tags are not loaded in the editor.",
          "type": "boolean"
        },
        "expandable": {
          "default": false,
          "description": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to upload. Has no effect if files are not resized.",
          "markdownDescription": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to\nupload. Has no effect if files are not resized.",
          "type": "boolean"
        },
        "format": {
          "description": "Enables a drop down menu for structured text. Has options for \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\". Set as space separated options (e.g. \"p h1 h2\").",
          "markdownDescription": "Enables a drop down menu for structured text. Has options for \"p\", \"h1\", \"h2\", \"h3\", \"h4\",\n\"h5\", \"h6\". Set as space separated options (e.g. \"p h1 h2\").",
          "type": "string"
        },
        "height": {
          "description": "Defines the height of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the height of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        },
        "horizontalrule": {
          "description": "Enables a control to insert a horizontal rule.",
          "markdownDescription": "Enables a control to insert a horizontal rule.",
          "type": "boolean"
        },
        "image": {
          "description": "Enables a control to insert an image. The image can be uploaded, existing or an external link.",
          "markdownDescription": "Enables a control to insert an image. The image can be uploaded, existing or an external link.",
          "type": "boolean"
        },
        "image_size_attributes": {
          "default": true,
          "description": "Instructs the editor to save `width` and `height` attributes on the image elements. This can prevent pop-in as a page loads.",
          "markdownDescription": "Instructs the editor to save `width` and `height` attributes on the image elements. This can\nprevent pop-in as a page loads.",
          "type": "boolean"
        },
        "indent": {
          "description": "Enables a control to increase indentation for numbered and unordered lists.",
          "markdownDescription": "Enables a control to increase indentation for numbered and unordered lists.",
          "type": "boolean"
        },
        "italic": {
          "description": "Enables a control to italicize selected text.",
          "markdownDescription": "Enables a control to italicize selected text.",
          "type": "boolean"
        },
        "justify": {
          "description": "Enables a control to justify text by toggling a class name for a block of text. The value is the class name the editor should add to justify the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to justify text by toggling a class name for a block of text. The value is\nthe class name the editor should add to justify the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "left": {
          "description": "Enables a control to left align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to left align text by toggling a class name for a block of text. The value is\nthe class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "link": {
          "description": "Enables a control to create hyperlinks around selected text.",
          "markdownDescription": "Enables a control to create hyperlinks around selected text.",
          "type": "boolean"
        },
        "mime_type": {
          "description": "Sets the format images are converted to prior to upload. The extension of the file is updated to match. Defaults to keeping the mime type of the uploaded file.",
          "enum": [
            "image/jpeg",
            "image/png"
          ],
          "markdownDescription": "Sets the format images are converted to prior to upload. The extension of the file is updated\nto match. Defaults to keeping the mime type of the uploaded file.",
          "type": "string"
        },
        "numberedlist": {
          "description": "Enables a control to insert a numbered list, or to convert selected blocks of text into a numbered list.",
          "markdownDescription": "Enables a control to insert a numbered list, or to convert selected blocks of text into a\nnumbered list.",
          "type": "boolean"
        },
        "outdent": {
          "description": "Enables a control to reduce indentation for numbered and unordered lists.",
          "markdownDescription": "Enables a control to reduce indentation for numbered and unordered lists.",
          "type": "boolean"
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        },
        "prevent_resize_existing_files": {
          "default": false,
          "description": "Enable to skip the image resizing process configured for this input when selecting existing images.",
          "markdownDescription": "Enable to skip the image resizing process configured for this input when selecting existing\nimages.",
          "type": "boolean"
        },
        "redo": {
          "description": "Enables a control to redo recent edits undone with undo. Redo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to redo recent edits undone with undo. Redo is always enabled through\nstandard OS-specific keyboard shortcuts.",
          "type": "boolean"
        },
        "remove_custom_markup": {
          "description": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this option turned on once you have all of your rich text options configured. Having `allow_custom_markup` turned on disables this option. Defaults to false.",
          "markdownDescription": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this\noption turned on once you have all of your rich text options configured. Having\n`allow_custom_markup` turned on disables this option. Defaults to false.",
          "type": "boolean"
        },
        "removeformat": {
          "description": "Enables the control to remove formatting from text. Applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles or formatting.",
          "markdownDescription": "Enables the control to remove formatting from text. Applies to formatting from `bold`,\n`italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles\nor formatting.",
          "type": "boolean"
        },
        "resize_style": {
          "default": "contain",
          "description": "Sets how uploaded image files are resized with a bounding box defined by width and height prior to upload. Has no effect when selecting existing images, or if width and height are unset.",
          "enum": [
            "cover",
            "contain",
            "stretch",
            "crop"
          ],
          "markdownDescription": "Sets how uploaded image files are resized with a bounding box defined by width and height prior\nto upload. Has no effect when selecting existing images, or if width and height are unset.",
          "type": "string"
        },
        "right": {
          "description": "Enables a control to right align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to right align text by toggling a class name for a block of text. The value\nis the class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "sizes": {
          "additionalProperties": false,
          "description": "Definitions for creating additional images of different sizes when uploading or selecting existing files.",
          "markdownDescription": "Definitions for creating additional images of different sizes when uploading or selecting\nexisting files.",
          "properties": {
            "size": {
              "const": "string",
              "description": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of the image (e.g. 2x, 3x, 100w, 360w).",
              "markdownDescription": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of\nthe image (e.g. 2x, 3x, 100w, 360w).",
              "type": "string"
            },
            "target": {
              "const": "string",
              "description": "A reference to another input that is given the path to this additional image file.",
              "markdownDescription": "A reference to another input that is given the path to this additional image file.",
              "type": "string"
            }
          },
          "required": [
            "size"
          ],
          "type": "object"
        },
        "snippet": {
          "description": "Enables a control to insert snippets, if any are available.",
          "markdownDescription": "Enables a control to insert snippets, if any are available.",
          "type": "boolean"
        },
        "strike": {
          "description": "Enables a control to strike selected text.",
          "markdownDescription": "Enables a control to strike selected text.",
          "type": "boolean"
        },
        "styles": {
          "description": "Enables a drop down menu for editors to style selected text or blocks or text. Styles are the combination of an element and class name. The value for this option is the path (either source or build output) to the CSS file containing the styles.",
          "markdownDescription": "Enables a drop down menu for editors to style selected text or blocks or text. Styles are the\ncombination of an element and class name. The value for this option is the path (either source\nor build output) to the CSS file containing the styles.",
          "type": "string"
        },
        "subscript": {
          "description": "Enables a control to set selected text to subscript.",
          "markdownDescription": "Enables a control to set selected text to subscript.",
          "type": "boolean"
        },
        "superscript": {
          "description": "Enables a control to set selected text to superscript.",
          "markdownDescription": "Enables a control to set selected text to superscript.",
          "type": "boolean"
        },
        "table": {
          "description": "Enables a control to insert a table. Further options for table cells are available in the context menu for cells within the editor.",
          "markdownDescription": "Enables a control to insert a table. Further options for table cells are available in the\ncontext menu for cells within the editor.",
          "type": "boolean"
        },
        "underline": {
          "description": "Enables a control to underline selected text.",
          "markdownDescription": "Enables a control to underline selected text.",
          "type": "boolean"
        },
        "undo": {
          "description": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific\nkeyboard shortcuts.",
          "type": "boolean"
        },
        "width": {
          "description": "Defines the width of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the width of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ChoiceInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ChoiceInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "choice",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ChoiceInputOptions": {
      "additionalProperties": false,
      "properties": {
        "allow_empty": {
          "default": true,
          "description": "Provides an empty option alongside the options provided by values.",
          "markdownDescription": "Provides an empty option alongside the options provided by values.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "preview": {
          "$ref": "#/definitions/SelectPreview",
          "description": "The preview definition for changing the way selected and available options are displayed.",
          "markdownDescription": "The preview definition for changing the way selected and available options are displayed."
        },
        "value_key": {
          "description": "Defines the key used for mapping between saved values and objects in values. This changes how the input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\", \"title\", then \"name\". Has no effect unless values is an array of objects, the key is used instead for objects, and the value itself is used for primitive types.",
          "markdownDescription": "Defines the key used for mapping between saved values and objects in values. This changes how\nthe input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\",\n\"title\", then \"name\". Has no effect unless values is an array of objects, the key is used\ninstead for objects, and the value itself is used for primitive types.",
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/SelectValues",
          "description": "Defines the values available to choose from. Optional, defaults to fetching values from the naming convention (e.g. colors or my_colors for data set colors).",
          "markdownDescription": "Defines the values available to choose from. Optional, defaults to fetching values from the\nnaming convention (e.g. colors or my_colors for data set colors)."
        }
      },
      "type": "object"
    },
    "CodeInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/CodeInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "code",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "CodeInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "max_visible_lines": {
          "default": 30,
          "description": "Sets the maximum number of visible lines for this input, effectively controlling maximum height. When the containing text exceeds this number, the input becomes a scroll area.",
          "markdownDescription": "Sets the maximum number of visible lines for this input, effectively controlling maximum\nheight. When the containing text exceeds this number, the input becomes a scroll area.",
          "type": "number"
        },
        "min_visible_lines": {
          "default": 10,
          "description": "Sets the minimum number of visible lines for this input, effectively controlling initial height. When the containing text exceeds this number, the input grows line by line to the lines defined by `max_visible_lines`.",
          "markdownDescription": "Sets the minimum number of visible lines for this input, effectively controlling initial\nheight. When the containing text exceeds this number, the input grows line by line to the lines\ndefined by `max_visible_lines`.",
          "type": "number"
        },
        "show_gutter": {
          "default": true,
          "description": "Toggles displaying line numbers and code folding controls in the editor.",
          "markdownDescription": "Toggles displaying line numbers and code folding controls in the editor.",
          "type": "boolean"
        },
        "syntax": {
          "$ref": "#/definitions/Syntax",
          "description": "Changes how the editor parses your content for syntax highlighting. Should be set to the language of the code going into the input.",
          "markdownDescription": "Changes how the editor parses your content for syntax highlighting. Should be set to the\nlanguage of the code going into the input."
        },
        "tab_size": {
          "default": 2,
          "description": "Defines how many spaces lines are auto indented by, and/or how many spaces tabs are shown as.",
          "markdownDescription": "Defines how many spaces lines are auto indented by, and/or how many spaces tabs are shown as.",
          "type": "number"
        },
        "theme": {
          "default": "monokai",
          "description": "Changes the color scheme for syntax highlighting in the editor.",
          "markdownDescription": "Changes the color scheme for syntax highlighting in the editor.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CollectionGroup": {
      "additionalProperties": false,
      "properties": {
        "collections": {
          "description": "The collections shown in the sidebar for this group. Collections here are referenced by their key within `collections_config`.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "The collections shown in the sidebar for this group. Collections here are referenced by their\nkey within `collections_config`.",
          "type": "array"
        },
        "heading": {
          "description": "Short, descriptive label for this group of collections.",
          "markdownDescription": "Short, descriptive label for this group of collections.",
          "type": "string"
        }
      },
      "required": [
        "heading",
        "collections"
      ],
      "type": "object"
    },
    "ColorInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ColorInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "color",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ColorInputOptions": {
      "additionalProperties": false,
      "properties": {
        "alpha": {
          "description": "Toggles showing a control for adjusting the transparency of the selected color. Defaults to using the naming convention, enabled if the input key ends with \"a\".",
          "markdownDescription": "Toggles showing a control for adjusting the transparency of the selected color. Defaults to\nusing the naming convention, enabled if the input key ends with \"a\".",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "format": {
          "description": "Sets what format the color value is saved as. Defaults to the naming convention, or HEX if that is unset.",
          "enum": [
            "rgb",
            "hex",
            "hsl",
            "hsv"
          ],
          "markdownDescription": "Sets what format the color value is saved as. Defaults to the naming convention, or HEX if that\nis unset.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Create": {
      "additionalProperties": false,
      "properties": {
        "_inputs": {
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "type": "object"
        },
        "_select_data": {
          "additionalProperties": {
            "$ref": "#/definitions/SelectValues"
          },
          "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
          "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
          "type": "object"
        },
        "_structures": {
          "additionalProperties": {
            "$ref": "#/definitions/Structure"
          },
          "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
          "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
          "type": "object"
        },
        "extra_data": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Adds to the available data placeholders coming from the file. Entry values follow the same format as path, and are processed sequentially before path. These values are not saved back to your file.",
          "markdownDescription": "Adds to the available data placeholders coming from the file. Entry values follow the same\nformat as path, and are processed sequentially before path. These values are not saved back to\nyour file.",
          "type": "object"
        },
        "path": {
          "description": "The raw template to be processed when creating files. Relative to the containing collection's path.",
          "markdownDescription": "The raw template to be processed when creating files. Relative to the containing collection's\npath.",
          "type": "string"
        },
        "publish_to": {
          "description": "Defines a target collection when publishing. When a file is published (currently only relevant to Jekyll), the target collection's create definition is used instead.",
          "markdownDescription": "Defines a target collection when publishing. When a file is published (currently only relevant\nto Jekyll), the target collection's create definition is used instead.",
          "type": "string"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "DateInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/DateInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "enum": [
            "date",
            "datetime"
          ],
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "DateInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "timezone": {
          "$ref": "#/definitions/Timezone",
          "description": "Specifies the time zone that dates are displayed and edited in. Also changes the suffix the date is persisted to the file with. Defaults to the global `timezone`.",
          "markdownDescription": "Specifies the time zone that dates are displayed and edited in. Also changes the suffix the\ndate is persisted to the file with. Defaults to the global `timezone`."
        }
      },
      "type": "object"
    },
    "Documentation": {
      "additionalProperties": false,
      "properties": {
        "icon": {
          "$ref": "#/definitions/Icon",
          "description": "The icon displayed next to the link.",
          "markdownDescription": "The icon displayed next to the link."
        },
        "text": {
          "description": "The visible text used in the link.",
          "markdownDescription": "The visible text used in the link.",
          "type": "string"
        },
        "url": {
          "description": "The \"href\" value of the link.",
          "markdownDescription": "The \"href\" value of the link.",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "Editables": {
      "additionalProperties": false,
      "properties": {
        "block": {
          "$ref": "#/definitions/BlockEditable",
          "description": "Contains input options for block Editable Regions.",
          "markdownDescription": "Contains input options for block Editable Regions."
        },
        "content": {
          "$ref": "#/definitions/BlockEditable",
          "description": "Contains input options for the Content Editor.",
          "markdownDescription": "Contains input options for the Content Editor."
        },
        "image": {
          "$ref": "#/definitions/ImageEditable",
          "description": "Contains input options for image Editable Regions.",
          "markdownDescription": "Contains input options for image Editable Regions."
        },
        "link": {
          "$ref": "#/definitions/LinkEditable",
          "description": "Contains input options for link Editable Regions.",
          "markdownDescription": "Contains input options for link Editable Regions."
        },
        "text": {
          "$ref": "#/definitions/TextEditable",
          "description": "Contains input options for text Editable Regions.",
          "markdownDescription": "Contains input options for text Editable Regions."
        }
      },
      "type": "object"
    },
    "Editor": {
      "additionalProperties": false,
      "properties": {
        "default_path": {
          "default": "/",
          "description": "The URL used for the dashboard screenshot, and where the editor opens to when clicking the dashboard \"Edit Home\" button.",
          "markdownDescription": "The URL used for the dashboard screenshot, and where the editor opens to when clicking the\ndashboard \"Edit Home\" button.",
          "type": "string"
        }
      },
      "required": [
        "default_path"
      ],
      "type": "object"
    },
    "EditorKey": {
      "enum": [
        "visual",
        "content",
        "data"
      ],
      "type": "string"
    },
    "EmptyTypeArray": {
      "enum": [
        "null",
        "array"
      ],
      "type": "string"
    },
    "EmptyTypeNumber": {
      "enum": [
        "null",
        "number"
      ],
      "type": "string"
    },
    "EmptyTypeObject": {
      "enum": [
        "null",
        "object"
      ],
      "type": "string"
    },
    "EmptyTypeText": {
      "enum": [
        "null",
        "string"
      ],
      "type": "string"
    },
    "FileInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/FileInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "enum": [
            "file",
            "document"
          ],
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "FileInputOptions": {
      "additionalProperties": false,
      "properties": {
        "accepts_mime_types": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/MimeType"
              },
              "type": "array"
            },
            {
              "const": "*",
              "type": "string"
            }
          ],
          "description": "Restricts which file types are available to select or upload to this input.",
          "markdownDescription": "Restricts which file types are available to select or upload to this input."
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        }
      },
      "type": "object"
    },
    "Filter": {
      "additionalProperties": false,
      "properties": {
        "base": {
          "$ref": "#/definitions/FilterBase",
          "description": "Defines the initial set of visible files in the collection file list. Defaults to \"all\", or \"strict\" for the auto-discovered `pages` collection in Jekyll, Hugo, and Eleventy.",
          "markdownDescription": "Defines the initial set of visible files in the collection file list. Defaults to \"all\", or\n\"strict\" for the auto-discovered `pages` collection in Jekyll, Hugo, and Eleventy."
        },
        "exclude": {
          "description": "Remove from the visible files set with `base`. Paths must be relative to the containing collection `path`.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "Remove from the visible files set with `base`. Paths must be relative to the containing\ncollection `path`.",
          "type": "array"
        },
        "include": {
          "description": "Add to the visible files set with `base`. Paths must be relative to the containing collection `path`.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "Add to the visible files set with `base`. Paths must be relative to the containing collection\n`path`.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "FilterBase": {
      "enum": [
        "none",
        "all",
        "strict"
      ],
      "type": "string"
    },
    "HugoCollectionConfig": {
      "additionalProperties": false,
      "properties": {
        "_array_structures": {
          "additionalProperties": {},
          "description": "[DEPRECATED] Now known as _structures.",
          "markdownDescription": "[DEPRECATED] Now known as _structures.",
          "type": "object"
        },
        "_comments": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.comment.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.comment.",
          "type": "object"
        },
        "_editables": {
          "$ref": "#/definitions/Editables",
          "description": "Contains input options for Editable Regions and the Content Editor.",
          "markdownDescription": "Contains input options for Editable Regions and the Content Editor."
        },
        "_enabled_editors": {
          "description": "Set a preferred editor and/or disable the others. The first value sets which editor opens by default, and the following values specify which editors are accessible.",
          "items": {
            "$ref": "#/definitions/EditorKey"
          },
          "markdownDescription": "Set a preferred editor and/or disable the others. The first value sets which editor opens by\ndefault, and the following values specify which editors are accessible.",
          "type": "array"
        },
        "_inputs": {
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "type": "object"
        },
        "_options": {
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.options.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.options.",
          "type": "object"
        },
        "_select_data": {
          "additionalProperties": {
            "$ref": "#/definitions/SelectValues"
          },
          "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
          "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
          "type": "object"
        },
        "_structures": {
          "additionalProperties": {
            "$ref": "#/definitions/Structure"
          },
          "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
          "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
          "type": "object"
        },
        "add_options": {
          "description": "Changes the options presented in the add menu in the collection file list. Defaults to an automatically generated list from _Schemas_, or uses the first file in the collection if no schemas are configured.",
          "items": {
            "$ref": "#/definitions/AddOption"
          },
          "markdownDescription": "Changes the options presented in the add menu in the collection file list. Defaults to an\nautomatically generated list from _Schemas_, or uses the first file in the collection if no\nschemas are configured.",
          "type": "array"
        },
        "create": {
          "$ref": "#/definitions/Create",
          "description": "The create path definition to control where new files are saved to inside this collection. Defaults to [relative_base_path]/{title|slugify}.md.",
          "markdownDescription": "The create path definition to control where new files are saved to inside this collection.\nDefaults to [relative_base_path]/{title|slugify}.md."
        },
        "description": {
          "description": "Text or Markdown to show above the collection file list.",
          "markdownDescription": "Text or Markdown to show above the collection file list.",
          "type": "string"
        },
        "disable_add": {
          "description": "Prevents users from adding new files in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only (data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "markdownDescription": "Prevents users from adding new files in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only\n(data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "type": "boolean"
        },
        "disable_add_folder": {
          "description": "Prevents users from adding new folders in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only (data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "markdownDescription": "Prevents users from adding new folders in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only\n(data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "type": "boolean"
        },
        "disable_file_actions": {
          "description": "Prevents users from renaming, moving and deleting files in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only (data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "markdownDescription": "Prevents users from renaming, moving and deleting files in the collection file list if true.\n\nDefaults to true for the Jekyll, Hugo and Eleventy data collection in the base data folder only\n(data sub-folders act as non-output collections). Otherwise, defaults to false.",
          "type": "boolean"
        },
        "documentation": {
          "$ref": "#/definitions/Documentation",
          "description": "Provides a custom link for documentation for editors shown above the collection file list.",
          "markdownDescription": "Provides a custom link for documentation for editors shown above the collection file list."
        },
        "filter": {
          "anyOf": [
            {
              "$ref": "#/definitions/Filter"
            },
            {
              "$ref": "#/definitions/FilterBase"
            }
          ],
          "description": "Controls which files are displayed in the collection list. Does not change which files are assigned to this collection.",
          "markdownDescription": "Controls which files are displayed in the collection list. Does not change which files are\nassigned to this collection."
        },
        "icon": {
          "$ref": "#/definitions/Icon",
          "description": "Sets an icon to use alongside references to this collection.",
          "markdownDescription": "Sets an icon to use alongside references to this collection."
        },
        "name": {
          "description": "The display name of this collection. Used in headings and in the context menu for items in the collection. This is optional as CloudCannon auto-generates this from the collection key.",
          "markdownDescription": "The display name of this collection. Used in headings and in the context menu for items in the\ncollection. This is optional as CloudCannon auto-generates this from the collection key.",
          "type": "string"
        },
        "new_preview_url": {
          "description": "Preview your unbuilt pages (e.g. drafts) to another page’s output URL. The Visual Editor will load that set preview URL and use the Data Bindings and Previews to render your new page without saving.\n\nFor example new_preview_url: /about/ will load the /about/ URL on new or unbuilt pages in the Visual Editor.",
          "markdownDescription": "Preview your unbuilt pages (e.g. drafts) to another page’s output URL. The Visual Editor will\nload that set preview URL and use the Data Bindings and Previews to render your new page\nwithout saving.\n\nFor example new_preview_url: /about/ will load the /about/ URL on new or unbuilt pages in the\nVisual Editor.",
          "type": "string"
        },
        "output": {
          "description": "Whether or not files in this collection produce files in the build output.",
          "markdownDescription": "Whether or not files in this collection produce files in the build output.",
          "type": "boolean"
        },
        "parse_branch_index": {
          "description": "Controls whether branch index files (e.g. _index.md) are assigned to this collection or not. The \"pages\" collection defaults this to true, and false otherwise.",
          "markdownDescription": "Controls whether branch index files (e.g. _index.md) are assigned to this collection or not.\nThe \"pages\" collection defaults this to true, and false otherwise.",
          "type": "boolean"
        },
        "path": {
          "description": "The top-most folder where the files in this collection are stored. It is relative to source. Each collection must have a unique path.",
          "markdownDescription": "The top-most folder where the files in this collection are stored. It is relative to source.\nEach collection must have a unique path.",
          "type": "string"
        },
        "preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS.",
          "markdownDescription": "Changes the way items are previewed in the CMS."
        },
        "schema_key": {
          "description": "The key used in each file to identify the schema that file uses. The value this key represents in each of this collection's files should match the keys in schemas. Defaults to _schema.",
          "markdownDescription": "The key used in each file to identify the schema that file uses. The value this key represents\nin each of this collection's files should match the keys in schemas. Defaults to _schema.",
          "type": "string"
        },
        "schemas": {
          "additionalProperties": {
            "$ref": "#/definitions/Schema"
          },
          "description": "The set of schemas for this collection. Schemas are used when creating and editing files in this collection. Each entry corresponds to a schema that describes a data structure for this collection.\n\nThe keys in this object should match the values used for schema_key inside each of this collection's files. default is a special entry and is used when a file has no schema.",
          "markdownDescription": "The set of schemas for this collection. Schemas are used when creating and editing files in\nthis collection. Each entry corresponds to a schema that describes a data structure for this\ncollection.\n\nThe keys in this object should match the values used for schema_key inside each of this\ncollection's files. default is a special entry and is used when a file has no schema.",
          "type": "object"
        },
        "singular_key": {
          "description": "Overrides the default singular input key of the collection. This is used for naming conventions for select and multiselect inputs.",
          "markdownDescription": "Overrides the default singular input key of the collection. This is used for naming conventions\nfor select and multiselect inputs.",
          "type": "string"
        },
        "singular_name": {
          "description": "Overrides the default singular display name of the collection. This is displayed in the collection add menu and file context menu.",
          "markdownDescription": "Overrides the default singular display name of the collection. This is displayed in the\ncollection add menu and file context menu.",
          "type": "string"
        },
        "sort": {
          "$ref": "#/definitions/Sort",
          "description": "Sets the default sorting for the collection file list. Defaults to the first option in sort_options, then falls back descending path. As an exception, defaults to descending date for blog-like collections.",
          "markdownDescription": "Sets the default sorting for the collection file list. Defaults to the first option in\nsort_options, then falls back descending path. As an exception, defaults to descending date for\nblog-like collections."
        },
        "sort_options": {
          "description": "Controls the available options in the sort menu. Defaults to generating the options from the first item in the collection, falling back to ascending path and descending path.",
          "items": {
            "$ref": "#/definitions/SortOption"
          },
          "markdownDescription": "Controls the available options in the sort menu. Defaults to generating the options from the\nfirst item in the collection, falling back to ascending path and descending path.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "HugoConfiguration": {
      "additionalProperties": false,
      "properties": {
        "_array_structures": {
          "additionalProperties": {},
          "description": "[DEPRECATED] Now known as _structures.",
          "markdownDescription": "[DEPRECATED] Now known as _structures.",
          "type": "object"
        },
        "_comments": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.comment.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.comment.",
          "type": "object"
        },
        "_editables": {
          "$ref": "#/definitions/Editables",
          "description": "Contains input options for Editable Regions and the Content Editor.",
          "markdownDescription": "Contains input options for Editable Regions and the Content Editor."
        },
        "_enabled_editors": {
          "description": "Set a preferred editor and/or disable the others. The first value sets which editor opens by default, and the following values specify which editors are accessible.",
          "items": {
            "$ref": "#/definitions/EditorKey"
          },
          "markdownDescription": "Set a preferred editor and/or disable the others. The first value sets which editor opens by\ndefault, and the following values specify which editors are accessible.",
          "type": "array"
        },
        "_inputs": {
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "type": "object"
        },
        "_options": {
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.options.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.options.",
          "type": "object"
        },
        "_select_data": {
          "additionalProperties": {
            "$ref": "#/definitions/SelectValues"
          },
          "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
          "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
          "type": "object"
        },
        "_snippets": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "_inputs": {
                "additionalProperties": {
                  "$ref": "#/definitions/Input"
                },
                "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "type": "object"
              },
              "_select_data": {
                "additionalProperties": {
                  "$ref": "#/definitions/SelectValues"
                },
                "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
                "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
                "type": "object"
              },
              "_structures": {
                "additionalProperties": {
                  "$ref": "#/definitions/Structure"
                },
                "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
                "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
                "type": "object"
              },
              "alternate_formats": {
                "description": "Alternate configurations for this snippet.",
                "items": {
                  "$ref": "#/definitions/interface-src_index.d.ts-1726-2559-src_index.d.ts-0-46800"
                },
                "markdownDescription": "Alternate configurations for this snippet.",
                "type": "array"
              },
              "definitions": {
                "description": "The variables required for the selected template.",
                "markdownDescription": "The variables required for the selected template.",
                "type": "object"
              },
              "inline": {
                "description": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat this snippet as a block-level element in the content editor.",
                "markdownDescription": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat\nthis snippet as a block-level element in the content editor.",
                "type": "boolean"
              },
              "params": {
                "additionalProperties": {},
                "description": "The parameters of this snippet.",
                "markdownDescription": "The parameters of this snippet.",
                "type": "object"
              },
              "picker_preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS while being chosen.",
                "markdownDescription": "Changes the way items are previewed in the CMS while being chosen."
              },
              "preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS.",
                "markdownDescription": "Changes the way items are previewed in the CMS."
              },
              "snippet": {
                "description": "Name of the snippet.",
                "markdownDescription": "Name of the snippet.",
                "type": "string"
              },
              "strict_whitespace": {
                "description": "Whether this snippet treats whitespace as-is or not.",
                "markdownDescription": "Whether this snippet treats whitespace as-is or not.",
                "type": "boolean"
              },
              "template": {
                "description": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "markdownDescription": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "Configuration for custom snippets.",
          "markdownDescription": "Configuration for custom snippets.",
          "type": "object"
        },
        "_snippets_definitions": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "_inputs": {
                "additionalProperties": {
                  "$ref": "#/definitions/Input"
                },
                "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "type": "object"
              },
              "_select_data": {
                "additionalProperties": {
                  "$ref": "#/definitions/SelectValues"
                },
                "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
                "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
                "type": "object"
              },
              "_structures": {
                "additionalProperties": {
                  "$ref": "#/definitions/Structure"
                },
                "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
                "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
                "type": "object"
              },
              "alternate_formats": {
                "description": "Alternate configurations for this snippet.",
                "items": {
                  "$ref": "#/definitions/interface-src_index.d.ts-1726-2559-src_index.d.ts-0-46800"
                },
                "markdownDescription": "Alternate configurations for this snippet.",
                "type": "array"
              },
              "definitions": {
                "description": "The variables required for the selected template.",
                "markdownDescription": "The variables required for the selected template.",
                "type": "object"
              },
              "inline": {
                "description": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat this snippet as a block-level element in the content editor.",
                "markdownDescription": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat\nthis snippet as a block-level element in the content editor.",
                "type": "boolean"
              },
              "params": {
                "additionalProperties": {},
                "description": "The parameters of this snippet.",
                "markdownDescription": "The parameters of this snippet.",
                "type": "object"
              },
              "picker_preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS while being chosen.",
                "markdownDescription": "Changes the way items are previewed in the CMS while being chosen."
              },
              "preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS.",
                "markdownDescription": "Changes the way items are previewed in the CMS."
              },
              "snippet": {
                "description": "Name of the snippet.",
                "markdownDescription": "Name of the snippet.",
                "type": "string"
              },
              "strict_whitespace": {
                "description": "Whether this snippet treats whitespace as-is or not.",
                "markdownDescription": "Whether this snippet treats whitespace as-is or not.",
                "type": "boolean"
              },
              "template": {
                "description": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "markdownDescription": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "Extended option used when creating more complex custom snippets.",
          "markdownDescription": "Extended option used when creating more complex custom snippets.",
          "type": "object"
        },
        "_snippets_imports": {
          "anyOf": [
            {
              "const": true,
              "type": "boolean"
            },
            {
              "additionalProperties": false,
              "properties": {
                "docusaurus_mdx": {
                  "additionalProperties": false,
                  "description": "Default snippets for Docusaurus SSG.",
                  "markdownDescription": "Default snippets for Docusaurus SSG.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "docusaurus_mdx_admonition",
                          "docusaurus_mdx_tabs",
                          "docusaurus_mdx_truncate",
                          "docusaurus_mdx_codeblock"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "docusaurus_mdx_admonition",
                          "docusaurus_mdx_tabs",
                          "docusaurus_mdx_truncate",
                          "docusaurus_mdx_codeblock"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "eleventy_liquid": {
                  "additionalProperties": false,
                  "description": "Default snippets for Eleventy SSG Liquid files.",
                  "markdownDescription": "Default snippets for Eleventy SSG Liquid files.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "eleventy_liquid_raw",
                          "_cc_eleventy_liquid_unknown_paired_shortcode",
                          "_cc_eleventy_liquid_unknown_shortcode",
                          "_cc_eleventy_liquid_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "eleventy_liquid_raw",
                          "_cc_eleventy_liquid_unknown_paired_shortcode",
                          "_cc_eleventy_liquid_unknown_shortcode",
                          "_cc_eleventy_liquid_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "eleventy_nunjucks": {
                  "additionalProperties": false,
                  "description": "Default snippets for Eleventy SSG Nunjucks files.",
                  "markdownDescription": "Default snippets for Eleventy SSG Nunjucks files.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "eleventy_nunjucks_raw",
                          "eleventy_nunjucks_verbatim",
                          "_cc_eleventy_nunjucks_unknown_paired_shortcode",
                          "_cc_eleventy_nunjucks_unknown_shortcode",
                          "_cc_eleventy_nunjucks_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "eleventy_nunjucks_raw",
                          "eleventy_nunjucks_verbatim",
                          "_cc_eleventy_nunjucks_unknown_paired_shortcode",
                          "_cc_eleventy_nunjucks_unknown_shortcode",
                          "_cc_eleventy_nunjucks_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "hugo": {
                  "additionalProperties": false,
                  "description": "Default snippets for Hugo SSG.",
                  "markdownDescription": "Default snippets for Hugo SSG.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "hugo_summary_divider",
                          "hugo_highlight",
                          "hugo_figure",
                          "hugo_gist",
                          "hugo_instagram",
                          "hugo_param",
                          "hugo_ref",
                          "hugo_relref",
                          "hugo_tweet",
                          "hugo_vimeo",
                          "hugo_youtube",
                          "_cc_hugo_unknown_paired",
                          "_cc_hugo_unknown",
                          "_cc_hugo_unknown_paired_processed",
                          "_cc_hugo_unknown_processed"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "hugo_summary_divider",
                          "hugo_highlight",
                          "hugo_figure",
                          "hugo_gist",
                          "hugo_instagram",
                          "hugo_param",
                          "hugo_ref",
                          "hugo_relref",
                          "hugo_tweet",
                          "hugo_vimeo",
                          "hugo_youtube",
                          "_cc_hugo_unknown_paired",
                          "_cc_hugo_unknown",
                          "_cc_hugo_unknown_paired_processed",
                          "_cc_hugo_unknown_processed"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "jekyll": {
                  "additionalProperties": false,
                  "description": "Default snippets for Jekyll SSG.",
                  "markdownDescription": "Default snippets for Jekyll SSG.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "_cc_jekyll_unknown_paired_tag",
                          "_cc_jekyll_unknown_tag",
                          "jekyll_highlight",
                          "_cc_jekyll_template",
                          "jekyll_raw",
                          "jekyll_link",
                          "jekyll_post_url"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "_cc_jekyll_unknown_paired_tag",
                          "_cc_jekyll_unknown_tag",
                          "jekyll_highlight",
                          "_cc_jekyll_template",
                          "jekyll_raw",
                          "jekyll_link",
                          "jekyll_post_url"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "markdoc": {
                  "additionalProperties": false,
                  "description": "Default snippets for Markdoc-based content.",
                  "markdownDescription": "Default snippets for Markdoc-based content.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "markdoc_id_annotation",
                          "markdoc_class_annotation",
                          "markdoc_table",
                          "_cc_markdoc_unknown_tag",
                          "_cc_markdoc_unknown_paired_tag",
                          "_cc_markdoc_unknown_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "markdoc_id_annotation",
                          "markdoc_class_annotation",
                          "markdoc_table",
                          "_cc_markdoc_unknown_tag",
                          "_cc_markdoc_unknown_paired_tag",
                          "_cc_markdoc_unknown_template"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "mdx": {
                  "additionalProperties": false,
                  "description": "Default snippets for MDX-based content.",
                  "markdownDescription": "Default snippets for MDX-based content.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "import",
                          "_cc_mdx_unknown_export",
                          "_cc_mdx_unknown_export_expression",
                          "_cc_mdx_unknown_export_default",
                          "_cc_mdx_unknown_template",
                          "_cc_mdx_paired_unknown",
                          "_cc_mdx_unknown"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "import",
                          "_cc_mdx_unknown_export",
                          "_cc_mdx_unknown_export_expression",
                          "_cc_mdx_unknown_export_default",
                          "_cc_mdx_unknown_template",
                          "_cc_mdx_paired_unknown",
                          "_cc_mdx_unknown"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "python_markdown_extensions": {
                  "additionalProperties": false,
                  "description": "Default snippets for content using Python markdown extensions.",
                  "markdownDescription": "Default snippets for content using Python markdown extensions.",
                  "properties": {
                    "exclude": {
                      "description": "The list of excluded snippets. If unset, all snippets are excluded unless defined in `included`.",
                      "items": {
                        "enum": [
                          "python_markdown_abbreviation",
                          "python_markdown_admonition",
                          "python_markdown_arithmatex",
                          "python_markdown_attribute_list",
                          "python_markdown_code_block",
                          "python_markdown_collapsible_admonition",
                          "python_markdown_tabs",
                          "python_markdown_footnote",
                          "python_markdown_footnote_marker",
                          "python_markdown_icon",
                          "python_markdown_image",
                          "python_markdown_inline_arithmatex",
                          "python_markdown_inline_code",
                          "python_markdown_link",
                          "python_markdown_reference_image",
                          "python_markdown_reference_template_image",
                          "python_markdown_reference_link",
                          "python_markdown_reference",
                          "python_markdown_reference_template",
                          "python_markdown_block_snippet",
                          "_cc_python_markdown_unknown_snippet",
                          "_cc_python_markdown_unknown_markdown_in_html"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of excluded snippets. If unset, all snippets are excluded unless defined in\n`included`.",
                      "type": "array"
                    },
                    "include": {
                      "description": "The list of included snippets. If unset, all snippets are included unless defined in `excluded`.",
                      "items": {
                        "enum": [
                          "python_markdown_abbreviation",
                          "python_markdown_admonition",
                          "python_markdown_arithmatex",
                          "python_markdown_attribute_list",
                          "python_markdown_code_block",
                          "python_markdown_collapsible_admonition",
                          "python_markdown_tabs",
                          "python_markdown_footnote",
                          "python_markdown_footnote_marker",
                          "python_markdown_icon",
                          "python_markdown_image",
                          "python_markdown_inline_arithmatex",
                          "python_markdown_inline_code",
                          "python_markdown_link",
                          "python_markdown_reference_image",
                          "python_markdown_reference_template_image",
                          "python_markdown_reference_link",
                          "python_markdown_reference",
                          "python_markdown_reference_template",
                          "python_markdown_block_snippet",
                          "_cc_python_markdown_unknown_snippet",
                          "_cc_python_markdown_unknown_markdown_in_html"
                        ],
                        "type": "string"
                      },
                      "markdownDescription": "The list of included snippets. If unset, all snippets are included unless defined in\n`excluded`.",
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          ],
          "description": "Provides control over which snippets are available to use and/or extend within `_snippets`.",
          "markdownDescription": "Provides control over which snippets are available to use and/or extend within `_snippets`."
        },
        "_snippets_templates": {
          "additionalProperties": {
            "additionalProperties": false,
            "properties": {
              "_inputs": {
                "additionalProperties": {
                  "$ref": "#/definitions/Input"
                },
                "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
                "type": "object"
              },
              "_select_data": {
                "additionalProperties": {
                  "$ref": "#/definitions/SelectValues"
                },
                "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
                "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
                "type": "object"
              },
              "_structures": {
                "additionalProperties": {
                  "$ref": "#/definitions/Structure"
                },
                "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
                "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
                "type": "object"
              },
              "alternate_formats": {
                "description": "Alternate configurations for this snippet.",
                "items": {
                  "$ref": "#/definitions/interface-src_index.d.ts-1726-2559-src_index.d.ts-0-46800"
                },
                "markdownDescription": "Alternate configurations for this snippet.",
                "type": "array"
              },
              "definitions": {
                "description": "The variables required for the selected template.",
                "markdownDescription": "The variables required for the selected template.",
                "type": "object"
              },
              "inline": {
                "description": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat this snippet as a block-level element in the content editor.",
                "markdownDescription": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat\nthis snippet as a block-level element in the content editor.",
                "type": "boolean"
              },
              "params": {
                "additionalProperties": {},
                "description": "The parameters of this snippet.",
                "markdownDescription": "The parameters of this snippet.",
                "type": "object"
              },
              "picker_preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS while being chosen.",
                "markdownDescription": "Changes the way items are previewed in the CMS while being chosen."
              },
              "preview": {
                "$ref": "#/definitions/Preview",
                "description": "Changes the way items are previewed in the CMS.",
                "markdownDescription": "Changes the way items are previewed in the CMS."
              },
              "snippet": {
                "description": "Name of the snippet.",
                "markdownDescription": "Name of the snippet.",
                "type": "string"
              },
              "strict_whitespace": {
                "description": "Whether this snippet treats whitespace as-is or not.",
                "markdownDescription": "Whether this snippet treats whitespace as-is or not.",
                "type": "boolean"
              },
              "template": {
                "description": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "markdownDescription": "The template that this snippet should inherit, out of the available Shortcode Templates.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": "Extended option used when creating more complex custom snippets.",
          "markdownDescription": "Extended option used when creating more complex custom snippets.",
          "type": "object"
        },
        "_structures": {
          "additionalProperties": {
            "$ref": "#/definitions/Structure"
          },
          "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
          "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
          "type": "object"
        },
        "base_url": {
          "description": "The subpath where your output files are hosted.",
          "markdownDescription": "The subpath where your output files are hosted.",
          "type": "string"
        },
        "collection_groups": {
          "description": "Defines which collections are shown in the site navigation and how those collections are grouped.",
          "items": {
            "$ref": "#/definitions/CollectionGroup"
          },
          "markdownDescription": "Defines which collections are shown in the site navigation and how those collections are\ngrouped.",
          "type": "array"
        },
        "collections_config": {
          "additionalProperties": {
            "$ref": "#/definitions/HugoCollectionConfig"
          },
          "description": "Definitions for your collections, which are the sets of content files for your site grouped by folder. Entries are keyed by a chosen collection key, and contain configuration specific to that collection.  {@link  https://cloudcannon.com/documentation/ CloudCannon }  yes.\n\n```yaml collections_config:   posts:     icon: event_date ```",
          "markdownDescription": "Definitions for your collections, which are the sets of content files for your site grouped by\nfolder. Entries are keyed by a chosen collection key, and contain configuration specific to\nthat collection.  {@link  https://cloudcannon.com/documentation/ CloudCannon }  yes.\n\n```yaml\ncollections_config:\n  posts:\n    icon: event_date\n```",
          "type": "object"
        },
        "collections_config_override": {
          "description": "Prevents CloudCannon from automatically discovering collections for supported SSGs if true. Defaults to false.",
          "markdownDescription": "Prevents CloudCannon from automatically discovering collections for supported SSGs if true.\nDefaults to false.",
          "type": "boolean"
        },
        "data_config": {
          "additionalProperties": {
            "type": "boolean"
          },
          "description": "Controls what data sets are available to populate select and multiselect inputs.",
          "markdownDescription": "Controls what data sets are available to populate select and multiselect inputs.",
          "type": "object"
        },
        "editor": {
          "$ref": "#/definitions/Editor",
          "description": "Contains settings for the default editor actions on your site.",
          "markdownDescription": "Contains settings for the default editor actions on your site."
        },
        "generator": {
          "additionalProperties": false,
          "description": "Contains settings for various Markdown engines.",
          "markdownDescription": "Contains settings for various Markdown engines.",
          "properties": {
            "metadata": {
              "additionalProperties": false,
              "description": "Settings for various Markdown engines.",
              "markdownDescription": "Settings for various Markdown engines.",
              "properties": {
                "commonmark": {
                  "description": "Markdown options specific used when markdown is set to \"commonmark\".",
                  "markdownDescription": "Markdown options specific used when markdown is set to \"commonmark\".",
                  "type": "object"
                },
                "commonmarkghpages": {
                  "description": "Markdown options specific used when markdown is set to \"commonmarkghpages\".",
                  "markdownDescription": "Markdown options specific used when markdown is set to \"commonmarkghpages\".",
                  "type": "object"
                },
                "goldmark": {
                  "description": "Markdown options specific used when markdown is set to \"goldmark\".",
                  "markdownDescription": "Markdown options specific used when markdown is set to \"goldmark\".",
                  "type": "object"
                },
                "kramdown": {
                  "description": "Markdown options specific used when markdown is set to \"kramdown\".",
                  "markdownDescription": "Markdown options specific used when markdown is set to \"kramdown\".",
                  "type": "object"
                },
                "markdown": {
                  "description": "The Markdown engine used on your site.",
                  "enum": [
                    "kramdown",
                    "commonmark",
                    "commonmarkghpages",
                    "goldmark",
                    "markdown-it"
                  ],
                  "markdownDescription": "The Markdown engine used on your site.",
                  "type": "string"
                },
                "markdown-it": {
                  "description": "Markdown options specific used when markdown is set to \"markdown-it\".",
                  "markdownDescription": "Markdown options specific used when markdown is set to \"markdown-it\".",
                  "type": "object"
                }
              },
              "required": [
                "markdown"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "paths": {
          "$ref": "#/definitions/Paths",
          "description": "Global paths to common folders.",
          "markdownDescription": "Global paths to common folders."
        },
        "source": {
          "description": "Base path to your site source files, relative to the root folder.",
          "markdownDescription": "Base path to your site source files, relative to the root folder.",
          "type": "string"
        },
        "source_editor": {
          "$ref": "#/definitions/SourceEditor",
          "description": "Settings for the behavior and appearance of the Source Editor.",
          "markdownDescription": "Settings for the behavior and appearance of the Source Editor."
        },
        "ssg": {
          "const": "hugo",
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone",
          "default": "Etc/UTC",
          "description": "Specifies the time zone that dates are displayed and edited in. Also changes the suffix the date is persisted to the file with.",
          "markdownDescription": "Specifies the time zone that dates are displayed and edited in. Also changes the suffix the\ndate is persisted to the file with."
        }
      },
      "type": "object"
    },
    "Icon": {
      "enum": [
        "10k",
        "10mp",
        "11mp",
        "123",
        "12mp",
        "13mp",
        "14mp",
        "15mp",
        "16mp",
        "17mp",
        "18_up_rating",
        "18mp",
        "19mp",
        "1k",
        "1k_plus",
        "1x_mobiledata",
        "20mp",
        "21mp",
        "22mp",
        "23mp",
        "24mp",
        "2k",
        "2k_plus",
        "2mp",
        "30fps",
        "30fps_select",
        "360",
        "3d_rotation",
        "3g_mobiledata",
        "3k",
        "3k_plus",
        "3mp",
        "3p",
        "4g_mobiledata",
        "4g_plus_mobiledata",
        "4k",
        "4k_plus",
        "4mp",
        "5g",
        "5k",
        "5k_plus",
        "5mp",
        "60fps",
        "60fps_select",
        "6_ft_apart",
        "6k",
        "6k_plus",
        "6mp",
        "7k",
        "7k_plus",
        "7mp",
        "8k",
        "8k_plus",
        "8mp",
        "9k",
        "9k_plus",
        "9mp",
        "abc",
        "ac_unit",
        "access_alarm",
        "access_alarms",
        "access_time",
        "access_time_filled",
        "accessibility",
        "accessibility_new",
        "accessible",
        "accessible_forward",
        "account_balance",
        "account_balance_wallet",
        "account_box",
        "account_circle",
        "account_tree",
        "ad_units",
        "adb",
        "add",
        "add_a_photo",
        "add_alarm",
        "add_alert",
        "add_box",
        "add_business",
        "add_card",
        "add_chart",
        "add_circle",
        "add_circle_outline",
        "add_comment",
        "add_home",
        "add_home_work",
        "add_ic_call",
        "add_link",
        "add_location",
        "add_location_alt",
        "add_moderator",
        "add_photo_alternate",
        "add_reaction",
        "add_road",
        "add_shopping_cart",
        "add_task",
        "add_to_drive",
        "add_to_home_screen",
        "add_to_photos",
        "add_to_queue",
        "addchart",
        "adf_scanner",
        "adjust",
        "admin_panel_settings",
        "ads_click",
        "agriculture",
        "air",
        "airline_seat_flat",
        "airline_seat_flat_angled",
        "airline_seat_individual_suite",
        "airline_seat_legroom_extra",
        "airline_seat_legroom_normal",
        "airline_seat_legroom_reduced",
        "airline_seat_recline_extra",
        "airline_seat_recline_normal",
        "airline_stops",
        "airlines",
        "airplane_ticket",
        "airplanemode_active",
        "airplanemode_inactive",
        "airplay",
        "airport_shuttle",
        "alarm",
        "alarm_add",
        "alarm_off",
        "alarm_on",
        "album",
        "align_horizontal_center",
        "align_horizontal_left",
        "align_horizontal_right",
        "align_vertical_bottom",
        "align_vertical_center",
        "align_vertical_top",
        "all_inbox",
        "all_inclusive",
        "all_out",
        "alt_route",
        "alternate_email",
        "analytics",
        "anchor",
        "android",
        "animation",
        "announcement",
        "aod",
        "apartment",
        "api",
        "app_blocking",
        "app_registration",
        "app_settings_alt",
        "app_shortcut",
        "approval",
        "apps",
        "apps_outage",
        "architecture",
        "archive",
        "area_chart",
        "arrow_back",
        "arrow_back_ios",
        "arrow_back_ios_new",
        "arrow_circle_down",
        "arrow_circle_left",
        "arrow_circle_right",
        "arrow_circle_up",
        "arrow_downward",
        "arrow_drop_down",
        "arrow_drop_down_circle",
        "arrow_drop_up",
        "arrow_forward",
        "arrow_forward_ios",
        "arrow_left",
        "arrow_outward",
        "arrow_right",
        "arrow_right_alt",
        "arrow_upward",
        "art_track",
        "article",
        "aspect_ratio",
        "assessment",
        "assignment",
        "assignment_ind",
        "assignment_late",
        "assignment_return",
        "assignment_returned",
        "assignment_turned_in",
        "assist_walker",
        "assistant",
        "assistant_direction",
        "assistant_photo",
        "assured_workload",
        "atm",
        "attach_email",
        "attach_file",
        "attach_money",
        "attachment",
        "attractions",
        "attribution",
        "audio_file",
        "audiotrack",
        "auto_awesome",
        "auto_awesome_mosaic",
        "auto_awesome_motion",
        "auto_delete",
        "auto_fix_high",
        "auto_fix_normal",
        "auto_fix_off",
        "auto_graph",
        "auto_mode",
        "auto_stories",
        "autofps_select",
        "autorenew",
        "av_timer",
        "baby_changing_station",
        "back_hand",
        "backpack",
        "backspace",
        "backup",
        "backup_table",
        "badge",
        "bakery_dining",
        "balance",
        "balcony",
        "ballot",
        "bar_chart",
        "batch_prediction",
        "bathroom",
        "bathtub",
        "battery_0_bar",
        "battery_1_bar",
        "battery_2_bar",
        "battery_3_bar",
        "battery_4_bar",
        "battery_5_bar",
        "battery_6_bar",
        "battery_alert",
        "battery_charging_full",
        "battery_full",
        "battery_saver",
        "battery_std",
        "battery_unknown",
        "beach_access",
        "bed",
        "bedroom_baby",
        "bedroom_child",
        "bedroom_parent",
        "bedtime",
        "bedtime_off",
        "beenhere",
        "bento",
        "bike_scooter",
        "biotech",
        "blender",
        "blind",
        "blinds",
        "blinds_closed",
        "block",
        "bloodtype",
        "bluetooth",
        "bluetooth_audio",
        "bluetooth_connected",
        "bluetooth_disabled",
        "bluetooth_drive",
        "bluetooth_searching",
        "blur_circular",
        "blur_linear",
        "blur_off",
        "blur_on",
        "bolt",
        "book",
        "book_online",
        "bookmark",
        "bookmark_add",
        "bookmark_added",
        "bookmark_border",
        "bookmark_remove",
        "bookmarks",
        "border_all",
        "border_bottom",
        "border_clear",
        "border_color",
        "border_horizontal",
        "border_inner",
        "border_left",
        "border_outer",
        "border_right",
        "border_style",
        "border_top",
        "border_vertical",
        "boy",
        "branding_watermark",
        "breakfast_dining",
        "brightness_1",
        "brightness_2",
        "brightness_3",
        "brightness_4",
        "brightness_5",
        "brightness_6",
        "brightness_7",
        "brightness_auto",
        "brightness_high",
        "brightness_low",
        "brightness_medium",
        "broadcast_on_home",
        "broadcast_on_personal",
        "broken_image",
        "browse_gallery",
        "browser_not_supported",
        "browser_updated",
        "brunch_dining",
        "brush",
        "bubble_chart",
        "bug_report",
        "build",
        "build_circle",
        "bungalow",
        "burst_mode",
        "bus_alert",
        "business",
        "business_center",
        "cabin",
        "cable",
        "cached",
        "cake",
        "calculate",
        "calendar_month",
        "calendar_today",
        "calendar_view_day",
        "calendar_view_month",
        "calendar_view_week",
        "call",
        "call_end",
        "call_made",
        "call_merge",
        "call_missed",
        "call_missed_outgoing",
        "call_received",
        "call_split",
        "call_to_action",
        "camera",
        "camera_alt",
        "camera_enhance",
        "camera_front",
        "camera_indoor",
        "camera_outdoor",
        "camera_rear",
        "camera_roll",
        "cameraswitch",
        "campaign",
        "cancel",
        "cancel_presentation",
        "cancel_schedule_send",
        "candlestick_chart",
        "car_crash",
        "car_rental",
        "car_repair",
        "card_giftcard",
        "card_membership",
        "card_travel",
        "carpenter",
        "cases",
        "casino",
        "cast",
        "cast_connected",
        "cast_for_education",
        "castle",
        "catching_pokemon",
        "category",
        "celebration",
        "cell_tower",
        "cell_wifi",
        "center_focus_strong",
        "center_focus_weak",
        "chair",
        "chair_alt",
        "chalet",
        "change_circle",
        "change_history",
        "charging_station",
        "chat",
        "chat_bubble",
        "chat_bubble_outline",
        "check",
        "check_box",
        "check_box_outline_blank",
        "check_circle",
        "check_circle_outline",
        "checklist",
        "checklist_rtl",
        "checkroom",
        "chevron_left",
        "chevron_right",
        "child_care",
        "child_friendly",
        "chrome_reader_mode",
        "church",
        "circle",
        "circle_notifications",
        "class",
        "clean_hands",
        "cleaning_services",
        "clear",
        "clear_all",
        "close",
        "close_fullscreen",
        "closed_caption",
        "closed_caption_disabled",
        "closed_caption_off",
        "cloud",
        "cloud_circle",
        "cloud_done",
        "cloud_download",
        "cloud_off",
        "cloud_queue",
        "cloud_sync",
        "cloud_upload",
        "co2",
        "co_present",
        "code",
        "code_off",
        "coffee",
        "coffee_maker",
        "collections",
        "collections_bookmark",
        "color_lens",
        "colorize",
        "comment",
        "comment_bank",
        "comments_disabled",
        "commit",
        "commute",
        "compare",
        "compare_arrows",
        "compass_calibration",
        "compost",
        "compress",
        "computer",
        "confirmation_number",
        "connect_without_contact",
        "connected_tv",
        "connecting_airports",
        "construction",
        "contact_emergency",
        "contact_mail",
        "contact_page",
        "contact_phone",
        "contact_support",
        "contactless",
        "contacts",
        "content_copy",
        "content_cut",
        "content_paste",
        "content_paste_go",
        "content_paste_off",
        "content_paste_search",
        "contrast",
        "control_camera",
        "control_point",
        "control_point_duplicate",
        "cookie",
        "copy_all",
        "copyright",
        "coronavirus",
        "corporate_fare",
        "cottage",
        "countertops",
        "create",
        "create_new_folder",
        "credit_card",
        "credit_card_off",
        "credit_score",
        "crib",
        "crisis_alert",
        "crop",
        "crop_16_9",
        "crop_3_2",
        "crop_5_4",
        "crop_7_5",
        "crop_din",
        "crop_free",
        "crop_landscape",
        "crop_original",
        "crop_portrait",
        "crop_rotate",
        "crop_square",
        "cruelty_free",
        "css",
        "currency_bitcoin",
        "currency_exchange",
        "currency_franc",
        "currency_lira",
        "currency_pound",
        "currency_ruble",
        "currency_rupee",
        "currency_yen",
        "currency_yuan",
        "curtains",
        "curtains_closed",
        "cyclone",
        "dangerous",
        "dark_mode",
        "dashboard",
        "dashboard_customize",
        "data_array",
        "data_exploration",
        "data_object",
        "data_saver_off",
        "data_saver_on",
        "data_thresholding",
        "data_usage",
        "dataset",
        "dataset_linked",
        "date_range",
        "deblur",
        "deck",
        "dehaze",
        "delete",
        "delete_forever",
        "delete_outline",
        "delete_sweep",
        "delivery_dining",
        "density_large",
        "density_medium",
        "density_small",
        "departure_board",
        "description",
        "deselect",
        "design_services",
        "desk",
        "desktop_access_disabled",
        "desktop_mac",
        "desktop_windows",
        "details",
        "developer_board",
        "developer_board_off",
        "developer_mode",
        "device_hub",
        "device_thermostat",
        "device_unknown",
        "devices",
        "devices_fold",
        "devices_other",
        "dialer_sip",
        "dialpad",
        "diamond",
        "difference",
        "dining",
        "dinner_dining",
        "directions",
        "directions_bike",
        "directions_boat",
        "directions_boat_filled",
        "directions_bus",
        "directions_bus_filled",
        "directions_car",
        "directions_car_filled",
        "directions_off",
        "directions_railway",
        "directions_railway_filled",
        "directions_run",
        "directions_subway",
        "directions_subway_filled",
        "directions_transit",
        "directions_transit_filled",
        "directions_walk",
        "dirty_lens",
        "disabled_by_default",
        "disabled_visible",
        "disc_full",
        "discount",
        "display_settings",
        "diversity_1",
        "diversity_2",
        "diversity_3",
        "dns",
        "do_disturb",
        "do_disturb_alt",
        "do_disturb_off",
        "do_disturb_on",
        "do_not_disturb",
        "do_not_disturb_alt",
        "do_not_disturb_off",
        "do_not_disturb_on",
        "do_not_disturb_on_total_silence",
        "do_not_step",
        "do_not_touch",
        "dock",
        "document_scanner",
        "domain",
        "domain_add",
        "domain_disabled",
        "domain_verification",
        "done",
        "done_all",
        "done_outline",
        "donut_large",
        "donut_small",
        "door_back",
        "door_front",
        "door_sliding",
        "doorbell",
        "double_arrow",
        "downhill_skiing",
        "download",
        "download_done",
        "download_for_offline",
        "downloading",
        "drafts",
        "drag_handle",
        "drag_indicator",
        "draw",
        "drive_eta",
        "drive_file_move",
        "drive_file_move_rtl",
        "drive_file_rename_outline",
        "drive_folder_upload",
        "dry",
        "dry_cleaning",
        "duo",
        "dvr",
        "dynamic_feed",
        "dynamic_form",
        "e_mobiledata",
        "earbuds",
        "earbuds_battery",
        "east",
        "edgesensor_high",
        "edgesensor_low",
        "edit",
        "edit_attributes",
        "edit_calendar",
        "edit_location",
        "edit_location_alt",
        "edit_note",
        "edit_notifications",
        "edit_off",
        "edit_road",
        "egg",
        "egg_alt",
        "eject",
        "elderly",
        "elderly_woman",
        "electric_bike",
        "electric_bolt",
        "electric_car",
        "electric_meter",
        "electric_moped",
        "electric_rickshaw",
        "electric_scooter",
        "electrical_services",
        "elevator",
        "email",
        "emergency",
        "emergency_recording",
        "emergency_share",
        "emoji_emotions",
        "emoji_events",
        "emoji_food_beverage",
        "emoji_nature",
        "emoji_objects",
        "emoji_people",
        "emoji_symbols",
        "emoji_transportation",
        "energy_savings_leaf",
        "engineering",
        "enhanced_encryption",
        "equalizer",
        "error",
        "error_outline",
        "escalator",
        "escalator_warning",
        "euro",
        "euro_symbol",
        "ev_station",
        "event",
        "event_available",
        "event_busy",
        "event_note",
        "event_repeat",
        "event_seat",
        "exit_to_app",
        "expand",
        "expand_circle_down",
        "expand_less",
        "expand_more",
        "explicit",
        "explore",
        "explore_off",
        "exposure",
        "exposure_neg_1",
        "exposure_neg_2",
        "exposure_plus_1",
        "exposure_plus_2",
        "exposure_zero",
        "extension",
        "extension_off",
        "face",
        "face_2",
        "face_3",
        "face_4",
        "face_5",
        "face_6",
        "face_retouching_natural",
        "face_retouching_off",
        "fact_check",
        "factory",
        "family_restroom",
        "fast_forward",
        "fast_rewind",
        "fastfood",
        "favorite",
        "favorite_border",
        "fax",
        "featured_play_list",
        "featured_video",
        "feed",
        "feedback",
        "female",
        "fence",
        "festival",
        "fiber_dvr",
        "fiber_manual_record",
        "fiber_new",
        "fiber_pin",
        "fiber_smart_record",
        "file_copy",
        "file_download",
        "file_download_done",
        "file_download_off",
        "file_open",
        "file_present",
        "file_upload",
        "filter",
        "filter_1",
        "filter_2",
        "filter_3",
        "filter_4",
        "filter_5",
        "filter_6",
        "filter_7",
        "filter_8",
        "filter_9",
        "filter_9_plus",
        "filter_alt",
        "filter_alt_off",
        "filter_b_and_w",
        "filter_center_focus",
        "filter_drama",
        "filter_frames",
        "filter_hdr",
        "filter_list",
        "filter_list_off",
        "filter_none",
        "filter_tilt_shift",
        "filter_vintage",
        "find_in_page",
        "find_replace",
        "fingerprint",
        "fire_extinguisher",
        "fire_hydrant_alt",
        "fire_truck",
        "fireplace",
        "first_page",
        "fit_screen",
        "fitbit",
        "fitness_center",
        "flag",
        "flag_circle",
        "flaky",
        "flare",
        "flash_auto",
        "flash_off",
        "flash_on",
        "flashlight_off",
        "flashlight_on",
        "flatware",
        "flight",
        "flight_class",
        "flight_land",
        "flight_takeoff",
        "flip",
        "flip_camera_android",
        "flip_camera_ios",
        "flip_to_back",
        "flip_to_front",
        "flood",
        "fluorescent",
        "flutter_dash",
        "fmd_bad",
        "fmd_good",
        "folder",
        "folder_copy",
        "folder_delete",
        "folder_off",
        "folder_open",
        "folder_shared",
        "folder_special",
        "folder_zip",
        "follow_the_signs",
        "font_download",
        "font_download_off",
        "food_bank",
        "forest",
        "fork_left",
        "fork_right",
        "format_align_center",
        "format_align_justify",
        "format_align_left",
        "format_align_right",
        "format_bold",
        "format_clear",
        "format_color_fill",
        "format_color_reset",
        "format_color_text",
        "format_indent_decrease",
        "format_indent_increase",
        "format_italic",
        "format_line_spacing",
        "format_list_bulleted",
        "format_list_numbered",
        "format_list_numbered_rtl",
        "format_overline",
        "format_paint",
        "format_quote",
        "format_shapes",
        "format_size",
        "format_strikethrough",
        "format_textdirection_l_to_r",
        "format_textdirection_r_to_l",
        "format_underlined",
        "fort",
        "forum",
        "forward",
        "forward_10",
        "forward_30",
        "forward_5",
        "forward_to_inbox",
        "foundation",
        "free_breakfast",
        "free_cancellation",
        "front_hand",
        "fullscreen",
        "fullscreen_exit",
        "functions",
        "g_mobiledata",
        "g_translate",
        "gamepad",
        "games",
        "garage",
        "gas_meter",
        "gavel",
        "generating_tokens",
        "gesture",
        "get_app",
        "gif",
        "gif_box",
        "girl",
        "gite",
        "golf_course",
        "gpp_bad",
        "gpp_good",
        "gpp_maybe",
        "gps_fixed",
        "gps_not_fixed",
        "gps_off",
        "grade",
        "gradient",
        "grading",
        "grain",
        "graphic_eq",
        "grass",
        "grid_3x3",
        "grid_4x4",
        "grid_goldenratio",
        "grid_off",
        "grid_on",
        "grid_view",
        "group",
        "group_add",
        "group_off",
        "group_remove",
        "group_work",
        "groups",
        "groups_2",
        "groups_3",
        "h_mobiledata",
        "h_plus_mobiledata",
        "hail",
        "handshake",
        "handyman",
        "hardware",
        "hd",
        "hdr_auto",
        "hdr_auto_select",
        "hdr_enhanced_select",
        "hdr_off",
        "hdr_off_select",
        "hdr_on",
        "hdr_on_select",
        "hdr_plus",
        "hdr_strong",
        "hdr_weak",
        "headphones",
        "headphones_battery",
        "headset",
        "headset_mic",
        "headset_off",
        "healing",
        "health_and_safety",
        "hearing",
        "hearing_disabled",
        "heart_broken",
        "heat_pump",
        "height",
        "help",
        "help_center",
        "help_outline",
        "hevc",
        "hexagon",
        "hide_image",
        "hide_source",
        "high_quality",
        "highlight",
        "highlight_alt",
        "highlight_off",
        "hiking",
        "history",
        "history_edu",
        "history_toggle_off",
        "hive",
        "hls",
        "hls_off",
        "holiday_village",
        "home",
        "home_max",
        "home_mini",
        "home_repair_service",
        "home_work",
        "horizontal_distribute",
        "horizontal_rule",
        "horizontal_split",
        "hot_tub",
        "hotel",
        "hotel_class",
        "hourglass_bottom",
        "hourglass_disabled",
        "hourglass_empty",
        "hourglass_full",
        "hourglass_top",
        "house",
        "house_siding",
        "houseboat",
        "how_to_reg",
        "how_to_vote",
        "html",
        "http",
        "https",
        "hub",
        "hvac",
        "ice_skating",
        "icecream",
        "image",
        "image_aspect_ratio",
        "image_not_supported",
        "image_search",
        "imagesearch_roller",
        "import_contacts",
        "import_export",
        "important_devices",
        "inbox",
        "incomplete_circle",
        "indeterminate_check_box",
        "info",
        "input",
        "insert_chart",
        "insert_chart_outlined",
        "insert_comment",
        "insert_drive_file",
        "insert_emoticon",
        "insert_invitation",
        "insert_link",
        "insert_page_break",
        "insert_photo",
        "insights",
        "install_desktop",
        "install_mobile",
        "integration_instructions",
        "interests",
        "interpreter_mode",
        "inventory",
        "inventory_2",
        "invert_colors",
        "invert_colors_off",
        "ios_share",
        "iron",
        "iso",
        "javascript",
        "join_full",
        "join_inner",
        "join_left",
        "join_right",
        "kayaking",
        "kebab_dining",
        "key",
        "key_off",
        "keyboard",
        "keyboard_alt",
        "keyboard_arrow_down",
        "keyboard_arrow_left",
        "keyboard_arrow_right",
        "keyboard_arrow_up",
        "keyboard_backspace",
        "keyboard_capslock",
        "keyboard_command_key",
        "keyboard_control_key",
        "keyboard_double_arrow_down",
        "keyboard_double_arrow_left",
        "keyboard_double_arrow_right",
        "keyboard_double_arrow_up",
        "keyboard_hide",
        "keyboard_option_key",
        "keyboard_return",
        "keyboard_tab",
        "keyboard_voice",
        "king_bed",
        "kitchen",
        "kitesurfing",
        "label",
        "label_important",
        "label_off",
        "lan",
        "landscape",
        "landslide",
        "language",
        "laptop",
        "laptop_chromebook",
        "laptop_mac",
        "laptop_windows",
        "last_page",
        "launch",
        "layers",
        "layers_clear",
        "leaderboard",
        "leak_add",
        "leak_remove",
        "legend_toggle",
        "lens",
        "lens_blur",
        "library_add",
        "library_add_check",
        "library_books",
        "library_music",
        "light",
        "light_mode",
        "lightbulb",
        "lightbulb_circle",
        "line_axis",
        "line_style",
        "line_weight",
        "linear_scale",
        "link",
        "link_off",
        "linked_camera",
        "liquor",
        "list",
        "list_alt",
        "live_help",
        "live_tv",
        "living",
        "local_activity",
        "local_airport",
        "local_atm",
        "local_bar",
        "local_cafe",
        "local_car_wash",
        "local_convenience_store",
        "local_dining",
        "local_drink",
        "local_fire_department",
        "local_florist",
        "local_gas_station",
        "local_grocery_store",
        "local_hospital",
        "local_hotel",
        "local_laundry_service",
        "local_library",
        "local_mall",
        "local_movies",
        "local_offer",
        "local_parking",
        "local_pharmacy",
        "local_phone",
        "local_pizza",
        "local_play",
        "local_police",
        "local_post_office",
        "local_printshop",
        "local_see",
        "local_shipping",
        "local_taxi",
        "location_city",
        "location_disabled",
        "location_off",
        "location_on",
        "location_searching",
        "lock",
        "lock_clock",
        "lock_open",
        "lock_person",
        "lock_reset",
        "login",
        "logo_dev",
        "logout",
        "looks",
        "looks_3",
        "looks_4",
        "looks_5",
        "looks_6",
        "looks_one",
        "looks_two",
        "loop",
        "loupe",
        "low_priority",
        "loyalty",
        "lte_mobiledata",
        "lte_plus_mobiledata",
        "luggage",
        "lunch_dining",
        "lyrics",
        "macro_off",
        "mail",
        "mail_lock",
        "mail_outline",
        "male",
        "man",
        "man_2",
        "man_3",
        "man_4",
        "manage_accounts",
        "manage_history",
        "manage_search",
        "map",
        "maps_home_work",
        "maps_ugc",
        "margin",
        "mark_as_unread",
        "mark_chat_read",
        "mark_chat_unread",
        "mark_email_read",
        "mark_email_unread",
        "mark_unread_chat_alt",
        "markunread",
        "markunread_mailbox",
        "masks",
        "maximize",
        "media_bluetooth_off",
        "media_bluetooth_on",
        "mediation",
        "medical_information",
        "medical_services",
        "medication",
        "medication_liquid",
        "meeting_room",
        "memory",
        "menu",
        "menu_book",
        "menu_open",
        "merge",
        "merge_type",
        "message",
        "mic",
        "mic_external_off",
        "mic_external_on",
        "mic_none",
        "mic_off",
        "microwave",
        "military_tech",
        "minimize",
        "minor_crash",
        "miscellaneous_services",
        "missed_video_call",
        "mms",
        "mobile_friendly",
        "mobile_off",
        "mobile_screen_share",
        "mobiledata_off",
        "mode",
        "mode_comment",
        "mode_edit",
        "mode_edit_outline",
        "mode_fan_off",
        "mode_night",
        "mode_of_travel",
        "mode_standby",
        "model_training",
        "monetization_on",
        "money",
        "money_off",
        "money_off_csred",
        "monitor",
        "monitor_heart",
        "monitor_weight",
        "monochrome_photos",
        "mood",
        "mood_bad",
        "moped",
        "more",
        "more_horiz",
        "more_time",
        "more_vert",
        "mosque",
        "motion_photos_auto",
        "motion_photos_off",
        "motion_photos_on",
        "motion_photos_pause",
        "motion_photos_paused",
        "mouse",
        "move_down",
        "move_to_inbox",
        "move_up",
        "movie",
        "movie_creation",
        "movie_filter",
        "moving",
        "mp",
        "multiline_chart",
        "multiple_stop",
        "museum",
        "music_note",
        "music_off",
        "music_video",
        "my_location",
        "nat",
        "nature",
        "nature_people",
        "navigate_before",
        "navigate_next",
        "navigation",
        "near_me",
        "near_me_disabled",
        "nearby_error",
        "nearby_off",
        "nest_cam_wired_stand",
        "network_cell",
        "network_check",
        "network_locked",
        "network_ping",
        "network_wifi",
        "network_wifi_1_bar",
        "network_wifi_2_bar",
        "network_wifi_3_bar",
        "new_label",
        "new_releases",
        "newspaper",
        "next_plan",
        "next_week",
        "nfc",
        "night_shelter",
        "nightlife",
        "nightlight",
        "nightlight_round",
        "nights_stay",
        "no_accounts",
        "no_adult_content",
        "no_backpack",
        "no_cell",
        "no_crash",
        "no_drinks",
        "no_encryption",
        "no_encryption_gmailerrorred",
        "no_flash",
        "no_food",
        "no_luggage",
        "no_meals",
        "no_meeting_room",
        "no_photography",
        "no_sim",
        "no_stroller",
        "no_transfer",
        "noise_aware",
        "noise_control_off",
        "nordic_walking",
        "north",
        "north_east",
        "north_west",
        "not_accessible",
        "not_interested",
        "not_listed_location",
        "not_started",
        "note",
        "note_add",
        "note_alt",
        "notes",
        "notification_add",
        "notification_important",
        "notifications",
        "notifications_active",
        "notifications_none",
        "notifications_off",
        "notifications_paused",
        "numbers",
        "offline_bolt",
        "offline_pin",
        "offline_share",
        "oil_barrel",
        "on_device_training",
        "ondemand_video",
        "online_prediction",
        "opacity",
        "open_in_browser",
        "open_in_full",
        "open_in_new",
        "open_in_new_off",
        "open_with",
        "other_houses",
        "outbound",
        "outbox",
        "outdoor_grill",
        "outlet",
        "outlined_flag",
        "output",
        "padding",
        "pages",
        "pageview",
        "paid",
        "palette",
        "pan_tool",
        "pan_tool_alt",
        "panorama",
        "panorama_fish_eye",
        "panorama_horizontal",
        "panorama_horizontal_select",
        "panorama_photosphere",
        "panorama_photosphere_select",
        "panorama_vertical",
        "panorama_vertical_select",
        "panorama_wide_angle",
        "panorama_wide_angle_select",
        "paragliding",
        "park",
        "party_mode",
        "password",
        "pattern",
        "pause",
        "pause_circle",
        "pause_circle_filled",
        "pause_circle_outline",
        "pause_presentation",
        "payment",
        "payments",
        "pedal_bike",
        "pending",
        "pending_actions",
        "pentagon",
        "people",
        "people_alt",
        "people_outline",
        "percent",
        "perm_camera_mic",
        "perm_contact_calendar",
        "perm_data_setting",
        "perm_device_information",
        "perm_identity",
        "perm_media",
        "perm_phone_msg",
        "perm_scan_wifi",
        "person",
        "person_2",
        "person_3",
        "person_4",
        "person_add",
        "person_add_alt",
        "person_add_alt_1",
        "person_add_disabled",
        "person_off",
        "person_outline",
        "person_pin",
        "person_pin_circle",
        "person_remove",
        "person_remove_alt_1",
        "person_search",
        "personal_injury",
        "personal_video",
        "pest_control",
        "pest_control_rodent",
        "pets",
        "phishing",
        "phone",
        "phone_android",
        "phone_bluetooth_speaker",
        "phone_callback",
        "phone_disabled",
        "phone_enabled",
        "phone_forwarded",
        "phone_in_talk",
        "phone_iphone",
        "phone_locked",
        "phone_missed",
        "phone_paused",
        "phonelink",
        "phonelink_erase",
        "phonelink_lock",
        "phonelink_off",
        "phonelink_ring",
        "phonelink_setup",
        "photo",
        "photo_album",
        "photo_camera",
        "photo_camera_back",
        "photo_camera_front",
        "photo_filter",
        "photo_library",
        "photo_size_select_actual",
        "photo_size_select_large",
        "photo_size_select_small",
        "php",
        "piano",
        "piano_off",
        "picture_as_pdf",
        "picture_in_picture",
        "picture_in_picture_alt",
        "pie_chart",
        "pie_chart_outline",
        "pin",
        "pin_drop",
        "pin_end",
        "pin_invoke",
        "pinch",
        "pivot_table_chart",
        "pix",
        "place",
        "plagiarism",
        "play_arrow",
        "play_circle",
        "play_circle_filled",
        "play_circle_outline",
        "play_disabled",
        "play_for_work",
        "play_lesson",
        "playlist_add",
        "playlist_add_check",
        "playlist_add_check_circle",
        "playlist_add_circle",
        "playlist_play",
        "playlist_remove",
        "plumbing",
        "plus_one",
        "podcasts",
        "point_of_sale",
        "policy",
        "poll",
        "polyline",
        "polymer",
        "pool",
        "portable_wifi_off",
        "portrait",
        "post_add",
        "power",
        "power_input",
        "power_off",
        "power_settings_new",
        "precision_manufacturing",
        "pregnant_woman",
        "present_to_all",
        "preview",
        "price_change",
        "price_check",
        "print",
        "print_disabled",
        "priority_high",
        "privacy_tip",
        "private_connectivity",
        "production_quantity_limits",
        "propane",
        "propane_tank",
        "psychology",
        "psychology_alt",
        "public",
        "public_off",
        "publish",
        "published_with_changes",
        "punch_clock",
        "push_pin",
        "qr_code",
        "qr_code_2",
        "qr_code_scanner",
        "query_builder",
        "query_stats",
        "question_answer",
        "question_mark",
        "queue",
        "queue_music",
        "queue_play_next",
        "quickreply",
        "quiz",
        "r_mobiledata",
        "radar",
        "radio",
        "radio_button_checked",
        "radio_button_unchecked",
        "railway_alert",
        "ramen_dining",
        "ramp_left",
        "ramp_right",
        "rate_review",
        "raw_off",
        "raw_on",
        "read_more",
        "real_estate_agent",
        "receipt",
        "receipt_long",
        "recent_actors",
        "recommend",
        "record_voice_over",
        "rectangle",
        "recycling",
        "redeem",
        "redo",
        "reduce_capacity",
        "refresh",
        "remember_me",
        "remove",
        "remove_circle",
        "remove_circle_outline",
        "remove_done",
        "remove_from_queue",
        "remove_moderator",
        "remove_red_eye",
        "remove_road",
        "remove_shopping_cart",
        "reorder",
        "repartition",
        "repeat",
        "repeat_on",
        "repeat_one",
        "repeat_one_on",
        "replay",
        "replay_10",
        "replay_30",
        "replay_5",
        "replay_circle_filled",
        "reply",
        "reply_all",
        "report",
        "report_gmailerrorred",
        "report_off",
        "report_problem",
        "request_page",
        "request_quote",
        "reset_tv",
        "restart_alt",
        "restaurant",
        "restaurant_menu",
        "restore",
        "restore_from_trash",
        "restore_page",
        "reviews",
        "rice_bowl",
        "ring_volume",
        "rocket",
        "rocket_launch",
        "roller_shades",
        "roller_shades_closed",
        "roller_skating",
        "roofing",
        "room",
        "room_preferences",
        "room_service",
        "rotate_90_degrees_ccw",
        "rotate_90_degrees_cw",
        "rotate_left",
        "rotate_right",
        "roundabout_left",
        "roundabout_right",
        "rounded_corner",
        "route",
        "router",
        "rowing",
        "rss_feed",
        "rsvp",
        "rtt",
        "rule",
        "rule_folder",
        "run_circle",
        "running_with_errors",
        "rv_hookup",
        "safety_check",
        "safety_divider",
        "sailing",
        "sanitizer",
        "satellite",
        "satellite_alt",
        "save",
        "save_alt",
        "save_as",
        "saved_search",
        "savings",
        "scale",
        "scanner",
        "scatter_plot",
        "schedule",
        "schedule_send",
        "schema",
        "school",
        "science",
        "score",
        "scoreboard",
        "screen_lock_landscape",
        "screen_lock_portrait",
        "screen_lock_rotation",
        "screen_rotation",
        "screen_rotation_alt",
        "screen_search_desktop",
        "screen_share",
        "screenshot",
        "screenshot_monitor",
        "scuba_diving",
        "sd",
        "sd_card",
        "sd_card_alert",
        "sd_storage",
        "search",
        "search_off",
        "security",
        "security_update",
        "security_update_good",
        "security_update_warning",
        "segment",
        "select_all",
        "self_improvement",
        "sell",
        "send",
        "send_and_archive",
        "send_time_extension",
        "send_to_mobile",
        "sensor_door",
        "sensor_occupied",
        "sensor_window",
        "sensors",
        "sensors_off",
        "sentiment_dissatisfied",
        "sentiment_neutral",
        "sentiment_satisfied",
        "sentiment_satisfied_alt",
        "sentiment_very_dissatisfied",
        "sentiment_very_satisfied",
        "set_meal",
        "settings",
        "settings_accessibility",
        "settings_applications",
        "settings_backup_restore",
        "settings_bluetooth",
        "settings_brightness",
        "settings_cell",
        "settings_ethernet",
        "settings_input_antenna",
        "settings_input_component",
        "settings_input_composite",
        "settings_input_hdmi",
        "settings_input_svideo",
        "settings_overscan",
        "settings_phone",
        "settings_power",
        "settings_remote",
        "settings_suggest",
        "settings_system_daydream",
        "settings_voice",
        "severe_cold",
        "shape_line",
        "share",
        "share_location",
        "shield",
        "shield_moon",
        "shop",
        "shop_2",
        "shop_two",
        "shopping_bag",
        "shopping_basket",
        "shopping_cart",
        "shopping_cart_checkout",
        "short_text",
        "shortcut",
        "show_chart",
        "shower",
        "shuffle",
        "shuffle_on",
        "shutter_speed",
        "sick",
        "sign_language",
        "signal_cellular_0_bar",
        "signal_cellular_4_bar",
        "signal_cellular_alt",
        "signal_cellular_alt_1_bar",
        "signal_cellular_alt_2_bar",
        "signal_cellular_connected_no_internet_0_bar",
        "signal_cellular_connected_no_internet_4_bar",
        "signal_cellular_no_sim",
        "signal_cellular_nodata",
        "signal_cellular_null",
        "signal_cellular_off",
        "signal_wifi_0_bar",
        "signal_wifi_4_bar",
        "signal_wifi_4_bar_lock",
        "signal_wifi_bad",
        "signal_wifi_connected_no_internet_4",
        "signal_wifi_off",
        "signal_wifi_statusbar_4_bar",
        "signal_wifi_statusbar_connected_no_internet_4",
        "signal_wifi_statusbar_null",
        "signpost",
        "sim_card",
        "sim_card_alert",
        "sim_card_download",
        "single_bed",
        "sip",
        "skateboarding",
        "skip_next",
        "skip_previous",
        "sledding",
        "slideshow",
        "slow_motion_video",
        "smart_button",
        "smart_display",
        "smart_screen",
        "smart_toy",
        "smartphone",
        "smoke_free",
        "smoking_rooms",
        "sms",
        "sms_failed",
        "snippet_folder",
        "snooze",
        "snowboarding",
        "snowmobile",
        "snowshoeing",
        "soap",
        "social_distance",
        "solar_power",
        "sort",
        "sort_by_alpha",
        "sos",
        "soup_kitchen",
        "source",
        "south",
        "south_america",
        "south_east",
        "south_west",
        "spa",
        "space_bar",
        "space_dashboard",
        "spatial_audio",
        "spatial_audio_off",
        "spatial_tracking",
        "speaker",
        "speaker_group",
        "speaker_notes",
        "speaker_notes_off",
        "speaker_phone",
        "speed",
        "spellcheck",
        "splitscreen",
        "spoke",
        "sports",
        "sports_bar",
        "sports_baseball",
        "sports_basketball",
        "sports_cricket",
        "sports_esports",
        "sports_football",
        "sports_golf",
        "sports_gymnastics",
        "sports_handball",
        "sports_hockey",
        "sports_kabaddi",
        "sports_martial_arts",
        "sports_mma",
        "sports_motorsports",
        "sports_rugby",
        "sports_score",
        "sports_soccer",
        "sports_tennis",
        "sports_volleyball",
        "square",
        "square_foot",
        "ssid_chart",
        "stacked_bar_chart",
        "stacked_line_chart",
        "stadium",
        "stairs",
        "star",
        "star_border",
        "star_border_purple500",
        "star_half",
        "star_outline",
        "star_purple500",
        "star_rate",
        "stars",
        "start",
        "stay_current_landscape",
        "stay_current_portrait",
        "stay_primary_landscape",
        "stay_primary_portrait",
        "sticky_note_2",
        "stop",
        "stop_circle",
        "stop_screen_share",
        "storage",
        "store",
        "store_mall_directory",
        "storefront",
        "storm",
        "straight",
        "straighten",
        "stream",
        "streetview",
        "strikethrough_s",
        "stroller",
        "style",
        "subdirectory_arrow_left",
        "subdirectory_arrow_right",
        "subject",
        "subscript",
        "subscriptions",
        "subtitles",
        "subtitles_off",
        "subway",
        "summarize",
        "superscript",
        "supervised_user_circle",
        "supervisor_account",
        "support",
        "support_agent",
        "surfing",
        "surround_sound",
        "swap_calls",
        "swap_horiz",
        "swap_horizontal_circle",
        "swap_vert",
        "swap_vertical_circle",
        "swipe",
        "swipe_down",
        "swipe_down_alt",
        "swipe_left",
        "swipe_left_alt",
        "swipe_right",
        "swipe_right_alt",
        "swipe_up",
        "swipe_up_alt",
        "swipe_vertical",
        "switch_access_shortcut",
        "switch_access_shortcut_add",
        "switch_account",
        "switch_camera",
        "switch_left",
        "switch_right",
        "switch_video",
        "synagogue",
        "sync",
        "sync_alt",
        "sync_disabled",
        "sync_lock",
        "sync_problem",
        "system_security_update",
        "system_security_update_good",
        "system_security_update_warning",
        "system_update",
        "system_update_alt",
        "tab",
        "tab_unselected",
        "table_bar",
        "table_chart",
        "table_restaurant",
        "table_rows",
        "table_view",
        "tablet",
        "tablet_android",
        "tablet_mac",
        "tag",
        "tag_faces",
        "takeout_dining",
        "tap_and_play",
        "tapas",
        "task",
        "task_alt",
        "taxi_alert",
        "temple_buddhist",
        "temple_hindu",
        "terminal",
        "terrain",
        "text_decrease",
        "text_fields",
        "text_format",
        "text_increase",
        "text_rotate_up",
        "text_rotate_vertical",
        "text_rotation_angledown",
        "text_rotation_angleup",
        "text_rotation_down",
        "text_rotation_none",
        "text_snippet",
        "textsms",
        "texture",
        "theater_comedy",
        "theaters",
        "thermostat",
        "thermostat_auto",
        "thumb_down",
        "thumb_down_alt",
        "thumb_down_off_alt",
        "thumb_up",
        "thumb_up_alt",
        "thumb_up_off_alt",
        "thumbs_up_down",
        "thunderstorm",
        "time_to_leave",
        "timelapse",
        "timeline",
        "timer",
        "timer_10",
        "timer_10_select",
        "timer_3",
        "timer_3_select",
        "timer_off",
        "tips_and_updates",
        "tire_repair",
        "title",
        "toc",
        "today",
        "toggle_off",
        "toggle_on",
        "token",
        "toll",
        "tonality",
        "topic",
        "tornado",
        "touch_app",
        "tour",
        "toys",
        "track_changes",
        "traffic",
        "train",
        "tram",
        "transcribe",
        "transfer_within_a_station",
        "transform",
        "transgender",
        "transit_enterexit",
        "translate",
        "travel_explore",
        "trending_down",
        "trending_flat",
        "trending_up",
        "trip_origin",
        "troubleshoot",
        "try",
        "tsunami",
        "tty",
        "tune",
        "tungsten",
        "turn_left",
        "turn_right",
        "turn_sharp_left",
        "turn_sharp_right",
        "turn_slight_left",
        "turn_slight_right",
        "turned_in",
        "turned_in_not",
        "tv",
        "tv_off",
        "two_wheeler",
        "type_specimen",
        "u_turn_left",
        "u_turn_right",
        "umbrella",
        "unarchive",
        "undo",
        "unfold_less",
        "unfold_less_double",
        "unfold_more",
        "unfold_more_double",
        "unpublished",
        "unsubscribe",
        "upcoming",
        "update",
        "update_disabled",
        "upgrade",
        "upload",
        "upload_file",
        "usb",
        "usb_off",
        "vaccines",
        "vape_free",
        "vaping_rooms",
        "verified",
        "verified_user",
        "vertical_align_bottom",
        "vertical_align_center",
        "vertical_align_top",
        "vertical_distribute",
        "vertical_shades",
        "vertical_shades_closed",
        "vertical_split",
        "vibration",
        "video_call",
        "video_camera_back",
        "video_camera_front",
        "video_chat",
        "video_file",
        "video_label",
        "video_library",
        "video_settings",
        "video_stable",
        "videocam",
        "videocam_off",
        "videogame_asset",
        "videogame_asset_off",
        "view_agenda",
        "view_array",
        "view_carousel",
        "view_column",
        "view_comfy",
        "view_comfy_alt",
        "view_compact",
        "view_compact_alt",
        "view_cozy",
        "view_day",
        "view_headline",
        "view_in_ar",
        "view_kanban",
        "view_list",
        "view_module",
        "view_quilt",
        "view_sidebar",
        "view_stream",
        "view_timeline",
        "view_week",
        "vignette",
        "villa",
        "visibility",
        "visibility_off",
        "voice_chat",
        "voice_over_off",
        "voicemail",
        "volcano",
        "volume_down",
        "volume_mute",
        "volume_off",
        "volume_up",
        "volunteer_activism",
        "vpn_key",
        "vpn_key_off",
        "vpn_lock",
        "vrpano",
        "wallet",
        "wallpaper",
        "warehouse",
        "warning",
        "warning_amber",
        "wash",
        "watch",
        "watch_later",
        "watch_off",
        "water",
        "water_damage",
        "water_drop",
        "waterfall_chart",
        "waves",
        "waving_hand",
        "wb_auto",
        "wb_cloudy",
        "wb_incandescent",
        "wb_iridescent",
        "wb_shade",
        "wb_sunny",
        "wb_twilight",
        "wc",
        "web",
        "web_asset",
        "web_asset_off",
        "web_stories",
        "webhook",
        "weekend",
        "west",
        "whatshot",
        "wheelchair_pickup",
        "where_to_vote",
        "widgets",
        "width_full",
        "width_normal",
        "width_wide",
        "wifi",
        "wifi_1_bar",
        "wifi_2_bar",
        "wifi_calling",
        "wifi_calling_3",
        "wifi_channel",
        "wifi_find",
        "wifi_lock",
        "wifi_off",
        "wifi_password",
        "wifi_protected_setup",
        "wifi_tethering",
        "wifi_tethering_error",
        "wifi_tethering_off",
        "wind_power",
        "window",
        "wine_bar",
        "woman",
        "woman_2",
        "work",
        "work_history",
        "work_off",
        "work_outline",
        "workspace_premium",
        "workspaces",
        "wrap_text",
        "wrong_location",
        "wysiwyg",
        "yard",
        "youtube_searched_for",
        "zoom_in",
        "zoom_in_map",
        "zoom_out",
        "zoom_out_map"
      ],
      "type": "string"
    },
    "ImageEditable": {
      "additionalProperties": false,
      "properties": {
        "allowed_sources": {
          "description": "If you have one or more DAMs connected to your site, you can use this key to list which asset sources can be uploaded to and selected from.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "If you have one or more DAMs connected to your site, you can use this key to list which asset\nsources can be uploaded to and selected from.",
          "type": "array"
        },
        "correct_orientation": {
          "default": true,
          "description": "Controls whether or not the JPEG headers defining how an image should be rotated before being displayed is baked into images prior to upload.",
          "markdownDescription": "Controls whether or not the JPEG headers defining how an image should be rotated before being\ndisplayed is baked into images prior to upload.",
          "type": "boolean"
        },
        "expandable": {
          "default": false,
          "description": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to upload. Has no effect if files are not resized.",
          "markdownDescription": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to\nupload. Has no effect if files are not resized.",
          "type": "boolean"
        },
        "height": {
          "description": "Defines the height of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the height of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        },
        "image_size_attributes": {
          "default": true,
          "description": "Instructs the editor to save `width` and `height` attributes on the image elements. This can prevent pop-in as a page loads.",
          "markdownDescription": "Instructs the editor to save `width` and `height` attributes on the image elements. This can\nprevent pop-in as a page loads.",
          "type": "boolean"
        },
        "mime_type": {
          "description": "Sets the format images are converted to prior to upload. The extension of the file is updated to match. Defaults to keeping the mime type of the uploaded file.",
          "enum": [
            "image/jpeg",
            "image/png"
          ],
          "markdownDescription": "Sets the format images are converted to prior to upload. The extension of the file is updated\nto match. Defaults to keeping the mime type of the uploaded file.",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        },
        "prevent_resize_existing_files": {
          "default": false,
          "description": "Enable to skip the image resizing process configured for this input when selecting existing images.",
          "markdownDescription": "Enable to skip the image resizing process configured for this input when selecting existing\nimages.",
          "type": "boolean"
        },
        "resize_style": {
          "default": "contain",
          "description": "Sets how uploaded image files are resized with a bounding box defined by width and height prior to upload. Has no effect when selecting existing images, or if width and height are unset.",
          "enum": [
            "cover",
            "contain",
            "stretch",
            "crop"
          ],
          "markdownDescription": "Sets how uploaded image files are resized with a bounding box defined by width and height prior\nto upload. Has no effect when selecting existing images, or if width and height are unset.",
          "type": "string"
        },
        "sizes": {
          "additionalProperties": false,
          "description": "Definitions for creating additional images of different sizes when uploading or selecting existing files.",
          "markdownDescription": "Definitions for creating additional images of different sizes when uploading or selecting\nexisting files.",
          "properties": {
            "size": {
              "const": "string",
              "description": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of the image (e.g. 2x, 3x, 100w, 360w).",
              "markdownDescription": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of\nthe image (e.g. 2x, 3x, 100w, 360w).",
              "type": "string"
            },
            "target": {
              "const": "string",
              "description": "A reference to another input that is given the path to this additional image file.",
              "markdownDescription": "A reference to another input that is given the path to this additional image file.",
              "type": "string"
            }
          },
          "required": [
            "size"
          ],
          "type": "object"
        },
        "width": {
          "description": "Defines the width of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the width of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ImageInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ImageInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "image",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ImageInputOptions": {
      "additionalProperties": false,
      "properties": {
        "accepts_mime_types": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/definitions/MimeType"
              },
              "type": "array"
            },
            {
              "const": "*",
              "type": "string"
            }
          ],
          "description": "Restricts which file types are available to select or upload to this input.",
          "markdownDescription": "Restricts which file types are available to select or upload to this input."
        },
        "allowed_sources": {
          "description": "If you have one or more DAMs connected to your site, you can use this key to list which asset sources can be uploaded to and selected from.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "If you have one or more DAMs connected to your site, you can use this key to list which asset\nsources can be uploaded to and selected from.",
          "type": "array"
        },
        "correct_orientation": {
          "default": true,
          "description": "Controls whether or not the JPEG headers defining how an image should be rotated before being displayed is baked into images prior to upload.",
          "markdownDescription": "Controls whether or not the JPEG headers defining how an image should be rotated before being\ndisplayed is baked into images prior to upload.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "expandable": {
          "default": false,
          "description": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to upload. Has no effect if files are not resized.",
          "markdownDescription": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to\nupload. Has no effect if files are not resized.",
          "type": "boolean"
        },
        "height": {
          "description": "Defines the height of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the height of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        },
        "image_size_attributes": {
          "default": true,
          "description": "Instructs the editor to save `width` and `height` attributes on the image elements. This can prevent pop-in as a page loads.",
          "markdownDescription": "Instructs the editor to save `width` and `height` attributes on the image elements. This can\nprevent pop-in as a page loads.",
          "type": "boolean"
        },
        "mime_type": {
          "description": "Sets the format images are converted to prior to upload. The extension of the file is updated to match. Defaults to keeping the mime type of the uploaded file.",
          "enum": [
            "image/jpeg",
            "image/png"
          ],
          "markdownDescription": "Sets the format images are converted to prior to upload. The extension of the file is updated\nto match. Defaults to keeping the mime type of the uploaded file.",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        },
        "prevent_resize_existing_files": {
          "default": false,
          "description": "Enable to skip the image resizing process configured for this input when selecting existing images.",
          "markdownDescription": "Enable to skip the image resizing process configured for this input when selecting existing\nimages.",
          "type": "boolean"
        },
        "resize_style": {
          "default": "contain",
          "description": "Sets how uploaded image files are resized with a bounding box defined by width and height prior to upload. Has no effect when selecting existing images, or if width and height are unset.",
          "enum": [
            "cover",
            "contain",
            "stretch",
            "crop"
          ],
          "markdownDescription": "Sets how uploaded image files are resized with a bounding box defined by width and height prior\nto upload. Has no effect when selecting existing images, or if width and height are unset.",
          "type": "string"
        },
        "sizes": {
          "additionalProperties": false,
          "description": "Definitions for creating additional images of different sizes when uploading or selecting existing files.",
          "markdownDescription": "Definitions for creating additional images of different sizes when uploading or selecting\nexisting files.",
          "properties": {
            "size": {
              "const": "string",
              "description": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of the image (e.g. 2x, 3x, 100w, 360w).",
              "markdownDescription": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of\nthe image (e.g. 2x, 3x, 100w, 360w).",
              "type": "string"
            },
            "target": {
              "const": "string",
              "description": "A reference to another input that is given the path to this additional image file.",
              "markdownDescription": "A reference to another input that is given the path to this additional image file.",
              "type": "string"
            }
          },
          "required": [
            "size"
          ],
          "type": "object"
        },
        "width": {
          "description": "Defines the width of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the width of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Input": {
      "anyOf": [
        {
          "$ref": "#/definitions/BaseInput"
        },
        {
          "$ref": "#/definitions/TextInput"
        },
        {
          "$ref": "#/definitions/CodeInput"
        },
        {
          "$ref": "#/definitions/ColorInput"
        },
        {
          "$ref": "#/definitions/NumberInput"
        },
        {
          "$ref": "#/definitions/RangeInput"
        },
        {
          "$ref": "#/definitions/UrlInput"
        },
        {
          "$ref": "#/definitions/RichTextInput"
        },
        {
          "$ref": "#/definitions/DateInput"
        },
        {
          "$ref": "#/definitions/FileInput"
        },
        {
          "$ref": "#/definitions/ImageInput"
        },
        {
          "$ref": "#/definitions/SelectInput"
        },
        {
          "$ref": "#/definitions/MultiselectInput"
        },
        {
          "$ref": "#/definitions/ChoiceInput"
        },
        {
          "$ref": "#/definitions/MultichoiceInput"
        },
        {
          "$ref": "#/definitions/ObjectInput"
        },
        {
          "$ref": "#/definitions/ArrayInput"
        }
      ]
    },
    "InputType": {
      "enum": [
        "text",
        "textarea",
        "email",
        "disabled",
        "pinterest",
        "facebook",
        "twitter",
        "github",
        "instagram",
        "code",
        "checkbox",
        "switch",
        "color",
        "number",
        "range",
        "url",
        "html",
        "markdown",
        "date",
        "datetime",
        "time",
        "file",
        "image",
        "document",
        "select",
        "multiselect",
        "choice",
        "multichoice",
        "object",
        "array"
      ],
      "type": "string"
    },
    "InstanceValue": {
      "enum": [
        "UUID",
        "NOW"
      ],
      "type": "string"
    },
    "LinkEditable": {
      "additionalProperties": false,
      "properties": {
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        }
      },
      "type": "object"
    },
    "MimeType": {
      "enum": [
        "x-world/x-3dmf",
        "application/x-authorware-bin",
        "application/x-authorware-map",
        "application/x-authorware-seg",
        "text/vnd.abc",
        "video/animaflex",
        "application/postscript",
        "audio/aiff",
        "audio/x-aiff",
        "application/x-aim",
        "text/x-audiosoft-intra",
        "application/x-navi-animation",
        "application/x-nokia-9000-communicator-add-on-software",
        "application/mime",
        "application/arj",
        "image/x-jg",
        "video/x-ms-asf",
        "text/x-asm",
        "text/asp",
        "application/x-mplayer2",
        "video/x-ms-asf-plugin",
        "audio/basic",
        "audio/x-au",
        "application/x-troff-msvideo",
        "video/avi",
        "video/msvideo",
        "video/x-msvideo",
        "video/avs-video",
        "application/x-bcpio",
        "application/mac-binary",
        "application/macbinary",
        "application/x-binary",
        "application/x-macbinary",
        "image/bmp",
        "image/x-windows-bmp",
        "application/book",
        "application/x-bsh",
        "application/x-bzip",
        "application/x-bzip2",
        "text/plain",
        "text/x-c",
        "application/vnd.ms-pki.seccat",
        "application/clariscad",
        "application/x-cocoa",
        "application/cdf",
        "application/x-cdf",
        "application/x-netcdf",
        "application/pkix-cert",
        "application/x-x509-ca-cert",
        "application/x-chat",
        "application/java",
        "application/java-byte-code",
        "application/x-java-class",
        "application/x-cpio",
        "application/mac-compactpro",
        "application/x-compactpro",
        "application/x-cpt",
        "application/pkcs-crl",
        "application/pkix-crl",
        "application/x-x509-user-cert",
        "application/x-csh",
        "text/x-script.csh",
        "application/x-pointplus",
        "text/css",
        "text/csv",
        "application/x-director",
        "application/x-deepv",
        "video/x-dv",
        "video/dl",
        "video/x-dl",
        "application/msword",
        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        "application/commonground",
        "application/drafting",
        "application/x-dvi",
        "drawing/x-dwf (old)",
        "model/vnd.dwf",
        "application/acad",
        "image/vnd.dwg",
        "image/x-dwg",
        "application/dxf",
        "text/x-script.elisp",
        "application/x-bytecode.elisp (compiled elisp)",
        "application/x-elc",
        "application/x-envoy",
        "application/x-esrehber",
        "text/x-setext",
        "application/envoy",
        "text/x-fortran",
        "application/vnd.fdf",
        "application/fractals",
        "image/fif",
        "video/fli",
        "video/x-fli",
        "image/florian",
        "text/vnd.fmi.flexstor",
        "video/x-atomic3d-feature",
        "image/vnd.fpx",
        "image/vnd.net-fpx",
        "application/freeloader",
        "audio/make",
        "image/g3fax",
        "image/gif",
        "video/gl",
        "video/x-gl",
        "audio/x-gsm",
        "application/x-gsp",
        "application/x-gss",
        "application/x-gtar",
        "application/x-compressed",
        "application/x-gzip",
        "multipart/x-gzip",
        "text/x-h",
        "application/x-hdf",
        "application/x-helpfile",
        "application/vnd.hp-hpgl",
        "text/x-script",
        "application/hlp",
        "application/x-winhelp",
        "application/binhex",
        "application/binhex4",
        "application/mac-binhex",
        "application/mac-binhex40",
        "application/x-binhex40",
        "application/x-mac-binhex40",
        "application/hta",
        "text/x-component",
        "text/html",
        "text/webviewhtml",
        "x-conference/x-cooltalk",
        "image/x-icon",
        "image/ief",
        "application/iges",
        "model/iges",
        "application/x-ima",
        "application/x-httpd-imap",
        "application/inf",
        "application/x-internett-signup",
        "application/x-ip2",
        "video/x-isvideo",
        "audio/it",
        "application/x-inventor",
        "i-world/i-vrml",
        "application/x-livescreen",
        "audio/x-jam",
        "text/x-java-source",
        "application/x-java-commerce",
        "image/jpeg",
        "image/pjpeg",
        "image/x-jps",
        "application/x-javascript",
        "application/javascript",
        "application/ecmascript",
        "text/javascript",
        "text/ecmascript",
        "application/json",
        "image/jutvision",
        "music/x-karaoke",
        "application/x-ksh",
        "text/x-script.ksh",
        "audio/nspaudio",
        "audio/x-nspaudio",
        "audio/x-liveaudio",
        "application/x-latex",
        "application/lha",
        "application/x-lha",
        "application/x-lisp",
        "text/x-script.lisp",
        "text/x-la-asf",
        "application/x-lzh",
        "application/lzx",
        "application/x-lzx",
        "text/x-m",
        "audio/mpeg",
        "audio/x-mpequrl",
        "audio/m4a",
        "audio/x-m4a",
        "application/x-troff-man",
        "application/x-navimap",
        "application/mbedlet",
        "application/x-magic-cap-package-1.0",
        "application/mcad",
        "application/x-mathcad",
        "image/vasa",
        "text/mcf",
        "application/netmc",
        "text/markdown",
        "application/x-troff-me",
        "message/rfc822",
        "application/x-midi",
        "audio/midi",
        "audio/x-mid",
        "audio/x-midi",
        "music/crescendo",
        "x-music/x-midi",
        "application/x-frame",
        "application/x-mif",
        "www/mime",
        "audio/x-vnd.audioexplosion.mjuicemediafile",
        "video/x-motion-jpeg",
        "application/base64",
        "application/x-meme",
        "audio/mod",
        "audio/x-mod",
        "video/quicktime",
        "video/x-sgi-movie",
        "audio/x-mpeg",
        "video/x-mpeg",
        "video/x-mpeq2a",
        "audio/mpeg3",
        "audio/x-mpeg-3",
        "video/mp4",
        "application/x-project",
        "video/mpeg",
        "application/vnd.ms-project",
        "application/marc",
        "application/x-troff-ms",
        "application/x-vnd.audioexplosion.mzz",
        "image/naplps",
        "application/vnd.nokia.configuration-message",
        "image/x-niff",
        "application/x-mix-transfer",
        "application/x-conference",
        "application/x-navidoc",
        "application/octet-stream",
        "application/oda",
        "audio/ogg",
        "application/ogg",
        "video/ogg",
        "application/x-omc",
        "application/x-omcdatamaker",
        "application/x-omcregerator",
        "text/x-pascal",
        "application/pkcs10",
        "application/x-pkcs10",
        "application/pkcs-12",
        "application/x-pkcs12",
        "application/x-pkcs7-signature",
        "application/pkcs7-mime",
        "application/x-pkcs7-mime",
        "application/x-pkcs7-certreqresp",
        "application/pkcs7-signature",
        "application/pro_eng",
        "text/pascal",
        "image/x-portable-bitmap",
        "application/vnd.hp-pcl",
        "application/x-pcl",
        "image/x-pict",
        "image/x-pcx",
        "chemical/x-pdb",
        "application/pdf",
        "audio/make.my.funk",
        "image/x-portable-graymap",
        "image/x-portable-greymap",
        "image/pict",
        "application/x-newton-compatible-pkg",
        "application/vnd.ms-pki.pko",
        "text/x-script.perl",
        "application/x-pixclscript",
        "image/x-xpixmap",
        "text/x-script.perl-module",
        "application/x-pagemaker",
        "image/png",
        "application/x-portable-anymap",
        "image/x-portable-anymap",
        "model/x-pov",
        "image/x-portable-pixmap",
        "application/mspowerpoint",
        "application/powerpoint",
        "application/vnd.ms-powerpoint",
        "application/x-mspowerpoint",
        "application/vnd.openxmlformats-officedocument.presentationml.presentation",
        "application/x-freelance",
        "paleovu/x-pv",
        "text/x-script.phyton",
        "application/x-bytecode.python",
        "audio/vnd.qcelp",
        "image/x-quicktime",
        "video/x-qtc",
        "audio/x-pn-realaudio",
        "audio/x-pn-realaudio-plugin",
        "audio/x-realaudio",
        "application/x-cmu-raster",
        "image/cmu-raster",
        "image/x-cmu-raster",
        "text/x-script.rexx",
        "image/vnd.rn-realflash",
        "image/x-rgb",
        "application/vnd.rn-realmedia",
        "audio/mid",
        "application/ringing-tones",
        "application/vnd.nokia.ringing-tone",
        "application/vnd.rn-realplayer",
        "application/x-troff",
        "image/vnd.rn-realpix",
        "application/x-rtf",
        "text/richtext",
        "application/rtf",
        "video/vnd.rn-realvideo",
        "audio/s3m",
        "application/x-tbook",
        "application/x-lotusscreencam",
        "text/x-script.guile",
        "text/x-script.scheme",
        "video/x-scm",
        "application/sdp",
        "application/x-sdp",
        "application/sounder",
        "application/sea",
        "application/x-sea",
        "application/set",
        "text/sgml",
        "text/x-sgml",
        "application/x-sh",
        "application/x-shar",
        "text/x-script.sh",
        "text/x-server-parsed-html",
        "audio/x-psid",
        "application/x-sit",
        "application/x-stuffit",
        "application/x-koan",
        "application/x-seelogo",
        "application/smil",
        "audio/x-adpcm",
        "application/solids",
        "application/x-pkcs7-certificates",
        "text/x-speech",
        "application/futuresplash",
        "application/x-sprite",
        "application/x-wais-source",
        "application/streamingmedia",
        "application/vnd.ms-pki.certstore",
        "application/step",
        "application/sla",
        "application/vnd.ms-pki.stl",
        "application/x-navistyle",
        "application/x-sv4cpio",
        "application/x-sv4crc",
        "image/svg+xml",
        "application/x-world",
        "x-world/x-svr",
        "application/x-shockwave-flash",
        "application/x-tar",
        "application/toolbook",
        "application/x-tcl",
        "text/x-script.tcl",
        "text/x-script.tcsh",
        "application/x-tex",
        "application/x-texinfo",
        "application/plain",
        "application/gnutar",
        "image/tiff",
        "image/x-tiff",
        "application/toml",
        "audio/tsp-audio",
        "application/dsptype",
        "audio/tsplayer",
        "text/tab-separated-values",
        "application/i-deas",
        "text/uri-list",
        "application/x-ustar",
        "multipart/x-ustar",
        "text/x-uuencode",
        "application/x-cdlink",
        "text/x-vcalendar",
        "application/vda",
        "video/vdo",
        "application/groupwise",
        "video/vivo",
        "video/vnd.vivo",
        "application/vocaltec-media-desc",
        "application/vocaltec-media-file",
        "audio/voc",
        "audio/x-voc",
        "video/vosaic",
        "audio/voxware",
        "audio/x-twinvq-plugin",
        "audio/x-twinvq",
        "application/x-vrml",
        "model/vrml",
        "x-world/x-vrml",
        "x-world/x-vrt",
        "application/x-visio",
        "application/wordperfect6.0",
        "application/wordperfect6.1",
        "audio/wav",
        "audio/x-wav",
        "application/x-qpro",
        "image/vnd.wap.wbmp",
        "application/vnd.xara",
        "video/webm",
        "audio/webm",
        "image/webp",
        "application/x-123",
        "windows/metafile",
        "text/vnd.wap.wml",
        "application/vnd.wap.wmlc",
        "text/vnd.wap.wmlscript",
        "application/vnd.wap.wmlscriptc",
        "video/x-ms-wmv",
        "application/wordperfect",
        "application/x-wpwin",
        "application/x-lotus",
        "application/mswrite",
        "application/x-wri",
        "text/scriplet",
        "application/x-wintalk",
        "image/x-xbitmap",
        "image/x-xbm",
        "image/xbm",
        "video/x-amt-demorun",
        "xgl/drawing",
        "image/vnd.xiff",
        "application/excel",
        "application/vnd.ms-excel",
        "application/x-excel",
        "application/x-msexcel",
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        "audio/xm",
        "application/xml",
        "text/xml",
        "xgl/movie",
        "application/x-vnd.ls-xpix",
        "image/xpm",
        "video/x-amt-showrun",
        "image/x-xwd",
        "image/x-xwindowdump",
        "text/vnd.yaml",
        "application/x-compress",
        "application/x-zip-compressed",
        "application/zip",
        "multipart/x-zip",
        "text/x-script.zsh"
      ],
      "type": "string"
    },
    "MultichoiceInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/MultichoiceInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "multichoice",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MultichoiceInputOptions": {
      "additionalProperties": false,
      "properties": {
        "allow_empty": {
          "default": true,
          "description": "Provides an empty option alongside the options provided by values.",
          "markdownDescription": "Provides an empty option alongside the options provided by values.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeArray",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "preview": {
          "$ref": "#/definitions/SelectPreview",
          "description": "The preview definition for changing the way selected and available options are displayed.",
          "markdownDescription": "The preview definition for changing the way selected and available options are displayed."
        },
        "value_key": {
          "description": "Defines the key used for mapping between saved values and objects in values. This changes how the input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\", \"title\", then \"name\". Has no effect unless values is an array of objects, the key is used instead for objects, and the value itself is used for primitive types.",
          "markdownDescription": "Defines the key used for mapping between saved values and objects in values. This changes how\nthe input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\",\n\"title\", then \"name\". Has no effect unless values is an array of objects, the key is used\ninstead for objects, and the value itself is used for primitive types.",
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/SelectValues",
          "description": "Defines the values available to choose from. Optional, defaults to fetching values from the naming convention (e.g. colors or my_colors for data set colors).",
          "markdownDescription": "Defines the values available to choose from. Optional, defaults to fetching values from the\nnaming convention (e.g. colors or my_colors for data set colors)."
        }
      },
      "type": "object"
    },
    "MultiselectInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/MultiselectInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "multiselect",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MultiselectInputOptions": {
      "additionalProperties": false,
      "properties": {
        "allow_create": {
          "default": false,
          "description": "Allows new text values to be created at edit time.",
          "markdownDescription": "Allows new text values to be created at edit time.",
          "type": "boolean"
        },
        "allow_empty": {
          "default": true,
          "description": "Provides an empty option alongside the options provided by values.",
          "markdownDescription": "Provides an empty option alongside the options provided by values.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeArray",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "value_key": {
          "description": "Defines the key used for mapping between saved values and objects in values. This changes how the input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\", \"title\", then \"name\". Has no effect unless values is an array of objects, the key is used instead for objects, and the value itself is used for primitive types.",
          "markdownDescription": "Defines the key used for mapping between saved values and objects in values. This changes how\nthe input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\",\n\"title\", then \"name\". Has no effect unless values is an array of objects, the key is used\ninstead for objects, and the value itself is used for primitive types.",
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/SelectValues",
          "description": "Defines the values available to choose from. Optional, defaults to fetching values from the naming convention (e.g. colors or my_colors for data set colors).",
          "markdownDescription": "Defines the values available to choose from. Optional, defaults to fetching values from the\nnaming convention (e.g. colors or my_colors for data set colors)."
        }
      },
      "type": "object"
    },
    "NumberInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/NumberInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "number",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "NumberInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeNumber",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "max": {
          "description": "The greatest value in the range of permitted values.",
          "markdownDescription": "The greatest value in the range of permitted values.",
          "type": "number"
        },
        "min": {
          "description": "The lowest value in the range of permitted values.",
          "markdownDescription": "The lowest value in the range of permitted values.",
          "type": "number"
        },
        "step": {
          "description": "A number that specifies the granularity that the value must adhere to, or the special value any, which allows any decimal value between `max` and `min`.",
          "markdownDescription": "A number that specifies the granularity that the value must adhere to, or the special value\nany, which allows any decimal value between `max` and `min`.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ObjectInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ObjectInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "object",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ObjectInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeObject",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "entries": {
          "additionalProperties": false,
          "description": "Contains options for the \"mutable\" subtype.",
          "markdownDescription": "Contains options for the \"mutable\" subtype.",
          "properties": {
            "allowed_keys": {
              "description": "Defines a limited set of keys that can exist on the data within an object input. This set is used when entries are added and renamed with `allow_create` enabled. Has no effect if `allow_create` is not enabled.",
              "items": {
                "type": "string"
              },
              "markdownDescription": "Defines a limited set of keys that can exist on the data within an object input. This set is\nused when entries are added and renamed with `allow_create` enabled. Has no effect if\n`allow_create` is not enabled.",
              "type": "array"
            },
            "assigned_structures": {
              "additionalProperties": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "description": "Limits available structures to specified keys.",
              "markdownDescription": "Limits available structures to specified keys.",
              "type": "object"
            },
            "structures": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/definitions/Structure"
                }
              ],
              "description": "Provides data formats when adding entries to the data within this object input. When adding an entry, team members are prompted to choose from a number of values you have defined. Has no effect if `allow_create` is false. `entries.structures` applies to the entries within the object.",
              "markdownDescription": "Provides data formats when adding entries to the data within this object input. When adding\nan entry, team members are prompted to choose from a number of values you have defined. Has\nno effect if `allow_create` is false. `entries.structures` applies to the entries within the\nobject."
            }
          },
          "type": "object"
        },
        "preview": {
          "$ref": "#/definitions/ObjectPreview",
          "description": "The preview definition for changing the way data within an object input is previewed before being expanded. If the input has `structures`, the preview from the structure value is used instead.",
          "markdownDescription": "The preview definition for changing the way data within an object input is previewed before\nbeing expanded. If the input has `structures`, the preview from the structure value is used\ninstead."
        },
        "structures": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/Structure"
            }
          ],
          "description": "Provides data formats for value of this object. When choosing an item, team members are prompted to choose from a number of values you have defined. `structures` applies to the object itself.",
          "markdownDescription": "Provides data formats for value of this object. When choosing an item, team members are\nprompted to choose from a number of values you have defined. `structures` applies to the object\nitself."
        },
        "subtype": {
          "description": "Changes the appearance and behavior of the input.",
          "enum": [
            "object",
            "mutable"
          ],
          "markdownDescription": "Changes the appearance and behavior of the input.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ObjectPreview": {
      "additionalProperties": false,
      "properties": {
        "icon": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the icon shown per item. Must result in a Material Icon name.",
          "markdownDescription": "Controls the icon shown per item. Must result in a Material Icon name."
        },
        "image": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the image shown per item.",
          "markdownDescription": "Controls the image shown per item."
        },
        "subtext": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the supporting text shown per item.",
          "markdownDescription": "Controls the supporting text shown per item."
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the main text shown per item.",
          "markdownDescription": "Controls the main text shown per item."
        }
      },
      "type": "object"
    },
    "Paths": {
      "additionalProperties": false,
      "properties": {
        "collections": {
          "default": "",
          "description": "Parent folder of all collections.",
          "markdownDescription": "Parent folder of all collections.",
          "type": "string"
        },
        "dam_static": {
          "default": "",
          "description": "Location of statically copied assets for DAM files. This prefix will be removed from the _DAM Uploads_ path when CloudCannon outputs the URL of an asset.",
          "markdownDescription": "Location of statically copied assets for DAM files. This prefix will be removed from the _DAM\nUploads_ path when CloudCannon outputs the URL of an asset.",
          "type": "string"
        },
        "dam_uploads": {
          "default": "",
          "description": "Default location of newly uploaded DAM files.",
          "markdownDescription": "Default location of newly uploaded DAM files.",
          "type": "string"
        },
        "dam_uploads_filename": {
          "description": "Filename template for newly uploaded DAM files.",
          "markdownDescription": "Filename template for newly uploaded DAM files.",
          "type": "string"
        },
        "data": {
          "description": "Parent folder of all site data files.",
          "markdownDescription": "Parent folder of all site data files.",
          "type": "string"
        },
        "includes": {
          "description": "Parent folder of all includes, partials, or shortcode files. _Only applies to Jekyll, Hugo, and Eleventy sites_.",
          "markdownDescription": "Parent folder of all includes, partials, or shortcode files. _Only applies to Jekyll, Hugo, and\nEleventy sites_.",
          "type": "string"
        },
        "layouts": {
          "description": "Parent folder of all site layout files. _Only applies to Jekyll, Hugo, and Eleventy sites_.",
          "markdownDescription": "Parent folder of all site layout files. _Only applies to Jekyll, Hugo, and Eleventy sites_.",
          "type": "string"
        },
        "static": {
          "description": "Location of assets that are statically copied to the output site. This prefix will be removed from the _Uploads_ path when CloudCannon outputs the URL of an asset.",
          "markdownDescription": "Location of assets that are statically copied to the output site. This prefix will be removed\nfrom the _Uploads_ path when CloudCannon outputs the URL of an asset.",
          "type": "string"
        },
        "uploads": {
          "default": "uploads",
          "description": "Default location of newly uploaded site files.",
          "markdownDescription": "Default location of newly uploaded site files.",
          "type": "string"
        },
        "uploads_filename": {
          "description": "Filename template for newly uploaded site files.",
          "markdownDescription": "Filename template for newly uploaded site files.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Preview": {
      "additionalProperties": false,
      "properties": {
        "gallery": {
          "$ref": "#/definitions/PreviewGallery",
          "description": "Details for large image/icon preview per item.",
          "markdownDescription": "Details for large image/icon preview per item."
        },
        "icon": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the icon shown per item. Must result in a Material Icon name.",
          "markdownDescription": "Controls the icon shown per item. Must result in a Material Icon name."
        },
        "icon_color": {
          "description": "Controls the color of the icon.",
          "markdownDescription": "Controls the color of the icon.",
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the image shown per item.",
          "markdownDescription": "Controls the image shown per item."
        },
        "metadata": {
          "description": "Defines a list of items that can contain an image, icon, and text.",
          "items": {
            "$ref": "#/definitions/PreviewMetadata"
          },
          "markdownDescription": "Defines a list of items that can contain an image, icon, and text.",
          "type": "array"
        },
        "subtext": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the supporting text shown per item.",
          "markdownDescription": "Controls the supporting text shown per item."
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the main text shown per item.",
          "markdownDescription": "Controls the main text shown per item."
        }
      },
      "type": "object"
    },
    "PreviewGallery": {
      "additionalProperties": false,
      "properties": {
        "fit": {
          "description": "Controls how the gallery image is positioned within the gallery.",
          "enum": [
            "padded",
            "cover",
            "contain",
            "cover-top"
          ],
          "markdownDescription": "Controls how the gallery image is positioned within the gallery.",
          "type": "string"
        },
        "icon": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the icon shown per item. Must result in a Material Icon name.",
          "markdownDescription": "Controls the icon shown per item. Must result in a Material Icon name."
        },
        "icon_color": {
          "description": "Controls the color of the icon.",
          "markdownDescription": "Controls the color of the icon.",
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the image shown per item.",
          "markdownDescription": "Controls the image shown per item."
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the main text shown per item.",
          "markdownDescription": "Controls the main text shown per item."
        }
      },
      "type": "object"
    },
    "PreviewMetadata": {
      "additionalProperties": false,
      "properties": {
        "icon": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the icon shown per item. Must result in a Material Icon name.",
          "markdownDescription": "Controls the icon shown per item. Must result in a Material Icon name."
        },
        "icon_color": {
          "description": "Controls the color of the icon.",
          "markdownDescription": "Controls the color of the icon.",
          "type": "string"
        },
        "image": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the image shown per item.",
          "markdownDescription": "Controls the image shown per item."
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the main text shown per item.",
          "markdownDescription": "Controls the main text shown per item."
        }
      },
      "type": "object"
    },
    "RangeInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/RangeInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "range",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "RangeInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeNumber",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "max": {
          "description": "The greatest value in the range of permitted values.",
          "markdownDescription": "The greatest value in the range of permitted values.",
          "type": "number"
        },
        "min": {
          "description": "The lowest value in the range of permitted values.",
          "markdownDescription": "The lowest value in the range of permitted values.",
          "type": "number"
        },
        "step": {
          "description": "A number that specifies the granularity that the value must adhere to, or the special value any, which allows any decimal value between `max` and `min`.",
          "markdownDescription": "A number that specifies the granularity that the value must adhere to, or the special value\nany, which allows any decimal value between `max` and `min`.",
          "type": "number"
        }
      },
      "required": [
        "min",
        "max",
        "step"
      ],
      "type": "object"
    },
    "ReducedPaths": {
      "additionalProperties": false,
      "properties": {
        "dam_static": {
          "default": "",
          "description": "Location of statically copied assets for DAM files. This prefix will be removed from the _DAM Uploads_ path when CloudCannon outputs the URL of an asset.",
          "markdownDescription": "Location of statically copied assets for DAM files. This prefix will be removed from the _DAM\nUploads_ path when CloudCannon outputs the URL of an asset.",
          "type": "string"
        },
        "dam_uploads": {
          "default": "",
          "description": "Default location of newly uploaded DAM files.",
          "markdownDescription": "Default location of newly uploaded DAM files.",
          "type": "string"
        },
        "dam_uploads_filename": {
          "description": "Filename template for newly uploaded DAM files.",
          "markdownDescription": "Filename template for newly uploaded DAM files.",
          "type": "string"
        },
        "static": {
          "description": "Location of assets that are statically copied to the output site. This prefix will be removed from the _Uploads_ path when CloudCannon outputs the URL of an asset.",
          "markdownDescription": "Location of assets that are statically copied to the output site. This prefix will be removed\nfrom the _Uploads_ path when CloudCannon outputs the URL of an asset.",
          "type": "string"
        },
        "uploads": {
          "default": "uploads",
          "description": "Default location of newly uploaded site files.",
          "markdownDescription": "Default location of newly uploaded site files.",
          "type": "string"
        },
        "uploads_filename": {
          "description": "Filename template for newly uploaded site files.",
          "markdownDescription": "Filename template for newly uploaded site files.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RichTextInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/RichTextInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "enum": [
            "html",
            "markdown"
          ],
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "RichTextInputOptions": {
      "additionalProperties": false,
      "properties": {
        "allow_custom_markup": {
          "description": "Defines if the content can contain \"custom markup\". It is not recommended to have this option turned on. Defaults to true for non-content editable regions, false otherwise.",
          "markdownDescription": "Defines if the content can contain \"custom markup\". It is not recommended to have this option\nturned on. Defaults to true for non-content editable regions, false otherwise.",
          "type": "boolean"
        },
        "allow_resize": {
          "description": "Shows or hides the resize handler to vertically resize the input.",
          "markdownDescription": "Shows or hides the resize handler to vertically resize the input.",
          "type": "boolean"
        },
        "allowed_sources": {
          "description": "If you have one or more DAMs connected to your site, you can use this key to list which asset sources can be uploaded to and selected from.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "If you have one or more DAMs connected to your site, you can use this key to list which asset\nsources can be uploaded to and selected from.",
          "type": "array"
        },
        "blockquote": {
          "description": "Enables a control to wrap blocks of text in block quotes.",
          "markdownDescription": "Enables a control to wrap blocks of text in block quotes.",
          "type": "boolean"
        },
        "bold": {
          "description": "Enables a control to set selected text to bold.",
          "markdownDescription": "Enables a control to set selected text to bold.",
          "type": "boolean"
        },
        "bulletedlist": {
          "description": "Enables a control to insert an unordered list, or to convert selected blocks of text into a unordered list.",
          "markdownDescription": "Enables a control to insert an unordered list, or to convert selected blocks of text into a\nunordered list.",
          "type": "boolean"
        },
        "center": {
          "description": "Enables a control to center align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to center align text by toggling a class name for a block of text. The value\nis the class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "code": {
          "description": "Enables a control to set selected text to inline code, and unselected blocks of text to code blocks.",
          "markdownDescription": "Enables a control to set selected text to inline code, and unselected blocks of text to code\nblocks.",
          "type": "boolean"
        },
        "copyformatting": {
          "description": "Enables a control to copy formatting from text to other text. Only applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other styles or formatting.",
          "markdownDescription": "Enables a control to copy formatting from text to other text. Only applies to formatting from\n`bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other\nstyles or formatting.",
          "type": "boolean"
        },
        "correct_orientation": {
          "default": true,
          "description": "Controls whether or not the JPEG headers defining how an image should be rotated before being displayed is baked into images prior to upload.",
          "markdownDescription": "Controls whether or not the JPEG headers defining how an image should be rotated before being\ndisplayed is baked into images prior to upload.",
          "type": "boolean"
        },
        "embed": {
          "description": "Enables a control to insert a region of raw HTML, including YouTube, Vimeo, Tweets, and other media. Embedded content is sanitized to mitigate XSS risks, which includes removing style tags. Embeds containing script tags are not loaded in the editor.",
          "markdownDescription": "Enables a control to insert a region of raw HTML, including YouTube, Vimeo, Tweets, and other\nmedia. Embedded content is sanitized to mitigate XSS risks, which includes removing style tags.\nEmbeds containing script tags are not loaded in the editor.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "expandable": {
          "default": false,
          "description": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to upload. Has no effect if files are not resized.",
          "markdownDescription": "Controls whether or not images can be upscaled to fit the bounding box during resize prior to\nupload. Has no effect if files are not resized.",
          "type": "boolean"
        },
        "format": {
          "description": "Enables a drop down menu for structured text. Has options for \"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\". Set as space separated options (e.g. \"p h1 h2\").",
          "markdownDescription": "Enables a drop down menu for structured text. Has options for \"p\", \"h1\", \"h2\", \"h3\", \"h4\",\n\"h5\", \"h6\". Set as space separated options (e.g. \"p h1 h2\").",
          "type": "string"
        },
        "height": {
          "description": "Defines the height of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the height of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        },
        "horizontalrule": {
          "description": "Enables a control to insert a horizontal rule.",
          "markdownDescription": "Enables a control to insert a horizontal rule.",
          "type": "boolean"
        },
        "image": {
          "description": "Enables a control to insert an image. The image can be uploaded, existing or an external link.",
          "markdownDescription": "Enables a control to insert an image. The image can be uploaded, existing or an external link.",
          "type": "boolean"
        },
        "image_size_attributes": {
          "default": true,
          "description": "Instructs the editor to save `width` and `height` attributes on the image elements. This can prevent pop-in as a page loads.",
          "markdownDescription": "Instructs the editor to save `width` and `height` attributes on the image elements. This can\nprevent pop-in as a page loads.",
          "type": "boolean"
        },
        "indent": {
          "description": "Enables a control to increase indentation for numbered and unordered lists.",
          "markdownDescription": "Enables a control to increase indentation for numbered and unordered lists.",
          "type": "boolean"
        },
        "initial_height": {
          "description": "Defines the initial height of this input in pixels (px).",
          "markdownDescription": "Defines the initial height of this input in pixels (px).",
          "type": "number"
        },
        "italic": {
          "description": "Enables a control to italicize selected text.",
          "markdownDescription": "Enables a control to italicize selected text.",
          "type": "boolean"
        },
        "justify": {
          "description": "Enables a control to justify text by toggling a class name for a block of text. The value is the class name the editor should add to justify the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to justify text by toggling a class name for a block of text. The value is\nthe class name the editor should add to justify the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "left": {
          "description": "Enables a control to left align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to left align text by toggling a class name for a block of text. The value is\nthe class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "link": {
          "description": "Enables a control to create hyperlinks around selected text.",
          "markdownDescription": "Enables a control to create hyperlinks around selected text.",
          "type": "boolean"
        },
        "mime_type": {
          "description": "Sets the format images are converted to prior to upload. The extension of the file is updated to match. Defaults to keeping the mime type of the uploaded file.",
          "enum": [
            "image/jpeg",
            "image/png"
          ],
          "markdownDescription": "Sets the format images are converted to prior to upload. The extension of the file is updated\nto match. Defaults to keeping the mime type of the uploaded file.",
          "type": "string"
        },
        "numberedlist": {
          "description": "Enables a control to insert a numbered list, or to convert selected blocks of text into a numbered list.",
          "markdownDescription": "Enables a control to insert a numbered list, or to convert selected blocks of text into a\nnumbered list.",
          "type": "boolean"
        },
        "outdent": {
          "description": "Enables a control to reduce indentation for numbered and unordered lists.",
          "markdownDescription": "Enables a control to reduce indentation for numbered and unordered lists.",
          "type": "boolean"
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        },
        "prevent_resize_existing_files": {
          "default": false,
          "description": "Enable to skip the image resizing process configured for this input when selecting existing images.",
          "markdownDescription": "Enable to skip the image resizing process configured for this input when selecting existing\nimages.",
          "type": "boolean"
        },
        "redo": {
          "description": "Enables a control to redo recent edits undone with undo. Redo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to redo recent edits undone with undo. Redo is always enabled through\nstandard OS-specific keyboard shortcuts.",
          "type": "boolean"
        },
        "remove_custom_markup": {
          "description": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this option turned on once you have all of your rich text options configured. Having `allow_custom_markup` turned on disables this option. Defaults to false.",
          "markdownDescription": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this\noption turned on once you have all of your rich text options configured. Having\n`allow_custom_markup` turned on disables this option. Defaults to false.",
          "type": "boolean"
        },
        "removeformat": {
          "description": "Enables the control to remove formatting from text. Applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles or formatting.",
          "markdownDescription": "Enables the control to remove formatting from text. Applies to formatting from `bold`,\n`italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles\nor formatting.",
          "type": "boolean"
        },
        "resize_style": {
          "default": "contain",
          "description": "Sets how uploaded image files are resized with a bounding box defined by width and height prior to upload. Has no effect when selecting existing images, or if width and height are unset.",
          "enum": [
            "cover",
            "contain",
            "stretch",
            "crop"
          ],
          "markdownDescription": "Sets how uploaded image files are resized with a bounding box defined by width and height prior\nto upload. Has no effect when selecting existing images, or if width and height are unset.",
          "type": "string"
        },
        "right": {
          "description": "Enables a control to right align text by toggling a class name for a block of text. The value is the class name the editor should add to align the text. The styles for this class need to be listed in the `styles` file to take effect outside of the input.",
          "markdownDescription": "Enables a control to right align text by toggling a class name for a block of text. The value\nis the class name the editor should add to align the text. The styles for this class need to be\nlisted in the `styles` file to take effect outside of the input.",
          "type": "string"
        },
        "sizes": {
          "additionalProperties": false,
          "description": "Definitions for creating additional images of different sizes when uploading or selecting existing files.",
          "markdownDescription": "Definitions for creating additional images of different sizes when uploading or selecting\nexisting files.",
          "properties": {
            "size": {
              "const": "string",
              "description": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of the image (e.g. 2x, 3x, 100w, 360w).",
              "markdownDescription": "A number suffixed with \"x\" (relative size) or \"w\" (fixed width) for setting the dimensions of\nthe image (e.g. 2x, 3x, 100w, 360w).",
              "type": "string"
            },
            "target": {
              "const": "string",
              "description": "A reference to another input that is given the path to this additional image file.",
              "markdownDescription": "A reference to another input that is given the path to this additional image file.",
              "type": "string"
            }
          },
          "required": [
            "size"
          ],
          "type": "object"
        },
        "snippet": {
          "description": "Enables a control to insert snippets, if any are available.",
          "markdownDescription": "Enables a control to insert snippets, if any are available.",
          "type": "boolean"
        },
        "strike": {
          "description": "Enables a control to strike selected text.",
          "markdownDescription": "Enables a control to strike selected text.",
          "type": "boolean"
        },
        "styles": {
          "description": "Enables a drop down menu for editors to style selected text or blocks or text. Styles are the combination of an element and class name. The value for this option is the path (either source or build output) to the CSS file containing the styles.",
          "markdownDescription": "Enables a drop down menu for editors to style selected text or blocks or text. Styles are the\ncombination of an element and class name. The value for this option is the path (either source\nor build output) to the CSS file containing the styles.",
          "type": "string"
        },
        "subscript": {
          "description": "Enables a control to set selected text to subscript.",
          "markdownDescription": "Enables a control to set selected text to subscript.",
          "type": "boolean"
        },
        "superscript": {
          "description": "Enables a control to set selected text to superscript.",
          "markdownDescription": "Enables a control to set selected text to superscript.",
          "type": "boolean"
        },
        "table": {
          "description": "Enables a control to insert a table. Further options for table cells are available in the context menu for cells within the editor.",
          "markdownDescription": "Enables a control to insert a table. Further options for table cells are available in the\ncontext menu for cells within the editor.",
          "type": "boolean"
        },
        "underline": {
          "description": "Enables a control to underline selected text.",
          "markdownDescription": "Enables a control to underline selected text.",
          "type": "boolean"
        },
        "undo": {
          "description": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific\nkeyboard shortcuts.",
          "type": "boolean"
        },
        "width": {
          "description": "Defines the width of the bounding box used in the image resizing process defined with resize_style.",
          "markdownDescription": "Defines the width of the bounding box used in the image resizing process defined with\nresize_style.",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Schema": {
      "additionalProperties": false,
      "properties": {
        "_array_structures": {
          "additionalProperties": {},
          "description": "[DEPRECATED] Now known as _structures.",
          "markdownDescription": "[DEPRECATED] Now known as _structures.",
          "type": "object"
        },
        "_comments": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.comment.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.comment.",
          "type": "object"
        },
        "_editables": {
          "$ref": "#/definitions/Editables",
          "description": "Contains input options for Editable Regions and the Content Editor.",
          "markdownDescription": "Contains input options for Editable Regions and the Content Editor."
        },
        "_enabled_editors": {
          "description": "Set a preferred editor and/or disable the others. The first value sets which editor opens by default, and the following values specify which editors are accessible.",
          "items": {
            "$ref": "#/definitions/EditorKey"
          },
          "markdownDescription": "Set a preferred editor and/or disable the others. The first value sets which editor opens by\ndefault, and the following values specify which editors are accessible.",
          "type": "array"
        },
        "_inputs": {
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "type": "object"
        },
        "_options": {
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          },
          "description": "[DEPRECATED] Now part of _inputs.*.options.",
          "markdownDescription": "[DEPRECATED] Now part of _inputs.*.options.",
          "type": "object"
        },
        "_select_data": {
          "additionalProperties": {
            "$ref": "#/definitions/SelectValues"
          },
          "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
          "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
          "type": "object"
        },
        "_structures": {
          "additionalProperties": {
            "$ref": "#/definitions/Structure"
          },
          "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
          "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
          "type": "object"
        },
        "create": {
          "$ref": "#/definitions/Create",
          "description": "Controls where new files are saved.",
          "markdownDescription": "Controls where new files are saved."
        },
        "hide_extra_inputs": {
          "default": false,
          "description": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "markdownDescription": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "type": "boolean"
        },
        "icon": {
          "$ref": "#/definitions/Icon",
          "default": "notes",
          "description": "Displayed in the add menu when creating new files; also used as the icon for collection files if no other preview is found.",
          "markdownDescription": "Displayed in the add menu when creating new files; also used as the icon for collection files\nif no other preview is found."
        },
        "name": {
          "description": "Displayed in the add menu when creating new files. Defaults to a formatted version of the key.",
          "markdownDescription": "Displayed in the add menu when creating new files. Defaults to a formatted version of the key.",
          "type": "string"
        },
        "new_preview_url": {
          "description": "Preview your unbuilt pages (e.g. drafts) to another page's output URL. The Visual Editor will load that URL, where Data Bindings and Previews are available to render your new page without saving.",
          "markdownDescription": "Preview your unbuilt pages (e.g. drafts) to another page's output URL. The Visual Editor will\nload that URL, where Data Bindings and Previews are available to render your new page without\nsaving.",
          "type": "string"
        },
        "path": {
          "description": "The path to the schema file. Relative to the root folder of the site.",
          "markdownDescription": "The path to the schema file. Relative to the root folder of the site.",
          "type": "string"
        },
        "preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS.",
          "markdownDescription": "Changes the way items are previewed in the CMS."
        },
        "remove_empty_inputs": {
          "default": false,
          "description": "If checked, empty inputs are removed from the source file on save. Removed inputs will be available for editing again, provided they are in the matching schema/structure.",
          "markdownDescription": "If checked, empty inputs are removed from the source file on save. Removed inputs will be\navailable for editing again, provided they are in the matching schema/structure.",
          "type": "boolean"
        },
        "remove_extra_inputs": {
          "default": true,
          "description": "If checked, extra inputs are removed when editing.",
          "markdownDescription": "If checked, extra inputs are removed when editing.",
          "type": "boolean"
        },
        "reorder_inputs": {
          "default": true,
          "description": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected inputs, unless `remove_extra_inputs` is true.",
          "markdownDescription": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected\ninputs, unless `remove_extra_inputs` is true.",
          "type": "boolean"
        }
      },
      "required": [
        "path"
      ],
      "type": "object"
    },
    "SelectInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/SelectInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "select",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "SelectInputOptions": {
      "additionalProperties": false,
      "properties": {
        "allow_create": {
          "default": false,
          "description": "Allows new text values to be created at edit time.",
          "markdownDescription": "Allows new text values to be created at edit time.",
          "type": "boolean"
        },
        "allow_empty": {
          "default": true,
          "description": "Provides an empty option alongside the options provided by values.",
          "markdownDescription": "Provides an empty option alongside the options provided by values.",
          "type": "boolean"
        },
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "value_key": {
          "description": "Defines the key used for mapping between saved values and objects in values. This changes how the input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\", \"title\", then \"name\". Has no effect unless values is an array of objects, the key is used instead for objects, and the value itself is used for primitive types.",
          "markdownDescription": "Defines the key used for mapping between saved values and objects in values. This changes how\nthe input saves selected values to match. Defaults to checking for \"id\", \"uuid\", \"path\",\n\"title\", then \"name\". Has no effect unless values is an array of objects, the key is used\ninstead for objects, and the value itself is used for primitive types.",
          "type": "string"
        },
        "values": {
          "$ref": "#/definitions/SelectValues",
          "description": "Defines the values available to choose from. Optional, defaults to fetching values from the naming convention (e.g. colors or my_colors for data set colors).",
          "markdownDescription": "Defines the values available to choose from. Optional, defaults to fetching values from the\nnaming convention (e.g. colors or my_colors for data set colors)."
        }
      },
      "type": "object"
    },
    "SelectPreview": {
      "additionalProperties": false,
      "properties": {
        "icon": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the icon shown per item. Must result in a Material Icon name.",
          "markdownDescription": "Controls the icon shown per item. Must result in a Material Icon name."
        },
        "text": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "additionalProperties": false,
                    "properties": {
                      "key": {
                        "description": "The key used to access the value used for the preview.",
                        "markdownDescription": "The key used to access the value used for the preview.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "key"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Controls the main text shown per item.",
          "markdownDescription": "Controls the main text shown per item."
        }
      },
      "type": "object"
    },
    "SelectValues": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        {
          "additionalProperties": {
            "type": "object"
          },
          "type": "object"
        }
      ]
    },
    "Sort": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "description": "Defines what field contains the value to sort on inside each collection item's data.",
          "markdownDescription": "Defines what field contains the value to sort on inside each collection item's data.",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/SortOrder",
          "default": "ascending",
          "description": "Controls which sort values come first.",
          "markdownDescription": "Controls which sort values come first."
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "SortOption": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "description": "Defines what field contains the value to sort on inside each collection item's data.",
          "markdownDescription": "Defines what field contains the value to sort on inside each collection item's data.",
          "type": "string"
        },
        "label": {
          "description": "The text to display in the sort option list. Defaults to a generated label from key and order.",
          "markdownDescription": "The text to display in the sort option list. Defaults to a generated label from key and order.",
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/SortOrder",
          "default": "ascending",
          "description": "Controls which sort values come first.",
          "markdownDescription": "Controls which sort values come first."
        }
      },
      "required": [
        "key"
      ],
      "type": "object"
    },
    "SortOrder": {
      "enum": [
        "ascending",
        "descending",
        "asc",
        "desc"
      ],
      "type": "string"
    },
    "SourceEditor": {
      "additionalProperties": false,
      "properties": {
        "show_gutter": {
          "default": true,
          "description": "Toggles displaying line numbers and code folding controls in the editor.",
          "markdownDescription": "Toggles displaying line numbers and code folding controls in the editor.",
          "type": "boolean"
        },
        "tab_size": {
          "default": 2,
          "description": "Defines how many spaces lines are auto indented by, and/or how many spaces tabs are shown as.",
          "markdownDescription": "Defines how many spaces lines are auto indented by, and/or how many spaces tabs are shown as.",
          "type": "number"
        },
        "theme": {
          "default": "monokai",
          "description": "Changes the color scheme for syntax highlighting in the editor.",
          "markdownDescription": "Changes the color scheme for syntax highlighting in the editor.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Structure": {
      "additionalProperties": false,
      "properties": {
        "hide_extra_inputs": {
          "default": false,
          "description": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "markdownDescription": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "type": "boolean"
        },
        "id_key": {
          "description": "Defines what key should be used to detect which structure an item is. If this key is not found in the existing structure, a comparison of key names is used. Defaults to \"_type\".",
          "markdownDescription": "Defines what key should be used to detect which structure an item is. If this key is not found\nin the existing structure, a comparison of key names is used. Defaults to \"_type\".",
          "type": "string"
        },
        "remove_empty_inputs": {
          "default": false,
          "description": "If checked, empty inputs are removed from the source file on save. Removed inputs will be available for editing again, provided they are in the matching schema/structure.",
          "markdownDescription": "If checked, empty inputs are removed from the source file on save. Removed inputs will be\navailable for editing again, provided they are in the matching schema/structure.",
          "type": "boolean"
        },
        "remove_extra_inputs": {
          "default": true,
          "description": "If checked, extra inputs are removed when editing.",
          "markdownDescription": "If checked, extra inputs are removed when editing.",
          "type": "boolean"
        },
        "reorder_inputs": {
          "default": true,
          "description": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected inputs, unless `remove_extra_inputs` is true.",
          "markdownDescription": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected\ninputs, unless `remove_extra_inputs` is true.",
          "type": "boolean"
        },
        "style": {
          "description": "Defines whether options are shown to your editors in a select menu (select, default) or a modal pop up window (modal) when adding a new item.",
          "enum": [
            "select",
            "modal"
          ],
          "markdownDescription": "Defines whether options are shown to your editors in a select menu (select, default) or a modal\npop up window (modal) when adding a new item.",
          "type": "string"
        },
        "values": {
          "description": "Defines what values are available to add when using this structure.",
          "items": {
            "$ref": "#/definitions/StructureValue"
          },
          "markdownDescription": "Defines what values are available to add when using this structure.",
          "type": "array"
        }
      },
      "required": [
        "values"
      ],
      "type": "object"
    },
    "StructureValue": {
      "additionalProperties": false,
      "properties": {
        "default": {
          "description": "If set to true, this item will be considered the default type for this structure. If the type of a value within a structure cannot be inferred based on its id_key or matching fields, then it will fall back to this item. If multiple items have default set to true, only the first item will be used.",
          "markdownDescription": "If set to true, this item will be considered the default type for this structure. If the type\nof a value within a structure cannot be inferred based on its id_key or matching fields, then\nit will fall back to this item. If multiple items have default set to true, only the first item\nwill be used.",
          "type": "boolean"
        },
        "hide_extra_inputs": {
          "default": false,
          "description": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "markdownDescription": "Hides unexpected inputs when editing. Has no effect if `remove_extra_inputs` is true.",
          "type": "boolean"
        },
        "icon": {
          "$ref": "#/definitions/Icon",
          "description": "An icon used when displaying the structure (defaults to either format_list_bulleted for items in arrays, or notes otherwise).",
          "markdownDescription": "An icon used when displaying the structure (defaults to either format_list_bulleted for items\nin arrays, or notes otherwise)."
        },
        "id": {
          "description": "A unique reference value used when referring to this structure value from the Object input's assigned_structures option.",
          "markdownDescription": "A unique reference value used when referring to this structure value from the Object input's\nassigned_structures option.",
          "type": "string"
        },
        "image": {
          "description": "Path to an image in your source files used when displaying the structure. Can be either a source (has priority) or output path.",
          "markdownDescription": "Path to an image in your source files used when displaying the structure. Can be either a\nsource (has priority) or output path.",
          "type": "string"
        },
        "label": {
          "description": "Used as the main text in the interface for this value.",
          "markdownDescription": "Used as the main text in the interface for this value.",
          "type": "string"
        },
        "picker_preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS while being chosen.",
          "markdownDescription": "Changes the way items are previewed in the CMS while being chosen."
        },
        "preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS.",
          "markdownDescription": "Changes the way items are previewed in the CMS."
        },
        "remove_empty_inputs": {
          "default": false,
          "description": "If checked, empty inputs are removed from the source file on save. Removed inputs will be available for editing again, provided they are in the matching schema/structure.",
          "markdownDescription": "If checked, empty inputs are removed from the source file on save. Removed inputs will be\navailable for editing again, provided they are in the matching schema/structure.",
          "type": "boolean"
        },
        "remove_extra_inputs": {
          "default": true,
          "description": "If checked, extra inputs are removed when editing.",
          "markdownDescription": "If checked, extra inputs are removed when editing.",
          "type": "boolean"
        },
        "reorder_inputs": {
          "default": true,
          "description": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected inputs, unless `remove_extra_inputs` is true.",
          "markdownDescription": "If true, inputs are sorted to match when editing. Extra inputs are ordered after expected\ninputs, unless `remove_extra_inputs` is true.",
          "type": "boolean"
        },
        "tags": {
          "description": "Used to group and filter items when selecting from a modal.",
          "items": {
            "type": "string"
          },
          "markdownDescription": "Used to group and filter items when selecting from a modal.",
          "type": "array"
        },
        "value": {
          "description": "The actual value used when items are added after selection.",
          "markdownDescription": "The actual value used when items are added after selection."
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Syntax": {
      "enum": [
        "abap",
        "abc",
        "actionscript",
        "ada",
        "alda",
        "apache_conf",
        "apex",
        "applescript",
        "aql",
        "asciidoc",
        "asl",
        "assembly_x86",
        "autohotkey",
        "batchfile",
        "c9search",
        "c_cpp",
        "cirru",
        "clojure",
        "cobol",
        "coffee",
        "coldfusion",
        "crystal",
        "csharp",
        "csound_document",
        "csound_orchestra",
        "csound_score",
        "csp",
        "css",
        "curly",
        "d",
        "dart",
        "diff",
        "django",
        "dockerfile",
        "dot",
        "drools",
        "edifact",
        "eiffel",
        "ejs",
        "elixir",
        "elm",
        "erlang",
        "forth",
        "fortran",
        "fsharp",
        "fsl",
        "ftl",
        "gcode",
        "gherkin",
        "gitignore",
        "glsl",
        "gobstones",
        "golang",
        "graphqlschema",
        "groovy",
        "haml",
        "handlebars",
        "haskell",
        "haskell_cabal",
        "haxe",
        "hjson",
        "html",
        "html_elixir",
        "html_ruby",
        "ini",
        "io",
        "jack",
        "jade",
        "java",
        "javascript",
        "json5",
        "json",
        "jsoniq",
        "jsp",
        "jssm",
        "jsx",
        "julia",
        "kotlin",
        "latex",
        "less",
        "liquid",
        "lisp",
        "livescript",
        "logiql",
        "logtalk",
        "lsl",
        "lua",
        "luapage",
        "lucene",
        "makefile",
        "markdown",
        "mask",
        "matlab",
        "maze",
        "mediawiki",
        "mel",
        "mixal",
        "mushcode",
        "mysql",
        "nginx",
        "nim",
        "nix",
        "nsis",
        "nunjucks",
        "objectivec",
        "ocaml",
        "pascal",
        "perl6",
        "perl",
        "pgsql",
        "php",
        "php_laravel_blade",
        "pig",
        "plain_text",
        "powershell",
        "praat",
        "prisma",
        "prolog",
        "properties",
        "protobuf",
        "puppet",
        "python",
        "qml",
        "r",
        "razor",
        "rdoc",
        "red",
        "redshift",
        "rhtml",
        "rst",
        "ruby",
        "rust",
        "sass",
        "scad",
        "scala",
        "scheme",
        "scss",
        "sh",
        "sjs",
        "slim",
        "smarty",
        "snippets",
        "soy_template",
        "space",
        "sparql",
        "sql",
        "sqlserver",
        "stylus",
        "svg",
        "swift",
        "tcl",
        "terraform",
        "tex",
        "text",
        "textile",
        "toml",
        "tsx",
        "turtle",
        "twig",
        "export typescript",
        "vala",
        "vbscript",
        "velocity",
        "verilog",
        "vhdl",
        "visualforce",
        "wollok",
        "xml",
        "xquery",
        "yaml",
        "zeek"
      ],
      "type": "string"
    },
    "TextEditable": {
      "additionalProperties": false,
      "properties": {
        "allow_custom_markup": {
          "description": "Defines if the content can contain \"custom markup\". It is not recommended to have this option turned on. Defaults to true for non-content editable regions, false otherwise.",
          "markdownDescription": "Defines if the content can contain \"custom markup\". It is not recommended to have this option\nturned on. Defaults to true for non-content editable regions, false otherwise.",
          "type": "boolean"
        },
        "bold": {
          "description": "Enables a control to set selected text to bold.",
          "markdownDescription": "Enables a control to set selected text to bold.",
          "type": "boolean"
        },
        "copyformatting": {
          "description": "Enables a control to copy formatting from text to other text. Only applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other styles or formatting.",
          "markdownDescription": "Enables a control to copy formatting from text to other text. Only applies to formatting from\n`bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not copy other\nstyles or formatting.",
          "type": "boolean"
        },
        "italic": {
          "description": "Enables a control to italicize selected text.",
          "markdownDescription": "Enables a control to italicize selected text.",
          "type": "boolean"
        },
        "link": {
          "description": "Enables a control to create hyperlinks around selected text.",
          "markdownDescription": "Enables a control to create hyperlinks around selected text.",
          "type": "boolean"
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        },
        "redo": {
          "description": "Enables a control to redo recent edits undone with undo. Redo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to redo recent edits undone with undo. Redo is always enabled through\nstandard OS-specific keyboard shortcuts.",
          "type": "boolean"
        },
        "remove_custom_markup": {
          "description": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this option turned on once you have all of your rich text options configured. Having `allow_custom_markup` turned on disables this option. Defaults to false.",
          "markdownDescription": "Defines if the content should be stripped of \"custom markup\". It is recommended to have this\noption turned on once you have all of your rich text options configured. Having\n`allow_custom_markup` turned on disables this option. Defaults to false.",
          "type": "boolean"
        },
        "removeformat": {
          "description": "Enables the control to remove formatting from text. Applies to formatting from `bold`, `italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles or formatting.",
          "markdownDescription": "Enables the control to remove formatting from text. Applies to formatting from `bold`,\n`italic`, `underline`, `strike`, `subscript`, and `superscript`. Does not remove other styles\nor formatting.",
          "type": "boolean"
        },
        "strike": {
          "description": "Enables a control to strike selected text.",
          "markdownDescription": "Enables a control to strike selected text.",
          "type": "boolean"
        },
        "subscript": {
          "description": "Enables a control to set selected text to subscript.",
          "markdownDescription": "Enables a control to set selected text to subscript.",
          "type": "boolean"
        },
        "superscript": {
          "description": "Enables a control to set selected text to superscript.",
          "markdownDescription": "Enables a control to set selected text to superscript.",
          "type": "boolean"
        },
        "underline": {
          "description": "Enables a control to underline selected text.",
          "markdownDescription": "Enables a control to underline selected text.",
          "type": "boolean"
        },
        "undo": {
          "description": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific keyboard shortcuts.",
          "markdownDescription": "Enables a control to undo recent edits. Undo is always enabled through standard OS-specific\nkeyboard shortcuts.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TextInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/TextInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "enum": [
            "text",
            "textarea",
            "email",
            "disabled",
            "pinterest",
            "facebook",
            "twitter",
            "github",
            "instagram"
          ],
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "TextInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "placeholder": {
          "description": "Text shown when this input has no value.",
          "markdownDescription": "Text shown when this input has no value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Timezone": {
      "enum": [
        "Africa/Abidjan",
        "Africa/Accra",
        "Africa/Addis_Ababa",
        "Africa/Algiers",
        "Africa/Asmara",
        "Africa/Asmera",
        "Africa/Bamako",
        "Africa/Bangui",
        "Africa/Banjul",
        "Africa/Bissau",
        "Africa/Blantyre",
        "Africa/Brazzaville",
        "Africa/Bujumbura",
        "Africa/Cairo",
        "Africa/Casablanca",
        "Africa/Ceuta",
        "Africa/Conakry",
        "Africa/Dakar",
        "Africa/Dar_es_Salaam",
        "Africa/Djibouti",
        "Africa/Douala",
        "Africa/El_Aaiun",
        "Africa/Freetown",
        "Africa/Gaborone",
        "Africa/Harare",
        "Africa/Johannesburg",
        "Africa/Juba",
        "Africa/Kampala",
        "Africa/Khartoum",
        "Africa/Kigali",
        "Africa/Kinshasa",
        "Africa/Lagos",
        "Africa/Libreville",
        "Africa/Lome",
        "Africa/Luanda",
        "Africa/Lubumbashi",
        "Africa/Lusaka",
        "Africa/Malabo",
        "Africa/Maputo",
        "Africa/Maseru",
        "Africa/Mbabane",
        "Africa/Mogadishu",
        "Africa/Monrovia",
        "Africa/Nairobi",
        "Africa/Ndjamena",
        "Africa/Niamey",
        "Africa/Nouakchott",
        "Africa/Ouagadougou",
        "Africa/Porto-Novo",
        "Africa/Sao_Tome",
        "Africa/Timbuktu",
        "Africa/Tripoli",
        "Africa/Tunis",
        "Africa/Windhoek",
        "America/Adak",
        "America/Anchorage",
        "America/Anguilla",
        "America/Antigua",
        "America/Araguaina",
        "America/Argentina/Buenos_Aires",
        "America/Argentina/Catamarca",
        "America/Argentina/ComodRivadavia",
        "America/Argentina/Cordoba",
        "America/Argentina/Jujuy",
        "America/Argentina/La_Rioja",
        "America/Argentina/Mendoza",
        "America/Argentina/Rio_Gallegos",
        "America/Argentina/Salta",
        "America/Argentina/San_Juan",
        "America/Argentina/San_Luis",
        "America/Argentina/Tucuman",
        "America/Argentina/Ushuaia",
        "America/Aruba",
        "America/Asuncion",
        "America/Atikokan",
        "America/Atka",
        "America/Bahia",
        "America/Bahia_Banderas",
        "America/Barbados",
        "America/Belem",
        "America/Belize",
        "America/Blanc-Sablon",
        "America/Boa_Vista",
        "America/Bogota",
        "America/Boise",
        "America/Buenos_Aires",
        "America/Cambridge_Bay",
        "America/Campo_Grande",
        "America/Cancun",
        "America/Caracas",
        "America/Catamarca",
        "America/Cayenne",
        "America/Cayman",
        "America/Chicago",
        "America/Chihuahua",
        "America/Coral_Harbour",
        "America/Cordoba",
        "America/Costa_Rica",
        "America/Creston",
        "America/Cuiaba",
        "America/Curacao",
        "America/Danmarkshavn",
        "America/Dawson",
        "America/Dawson_Creek",
        "America/Denver",
        "America/Detroit",
        "America/Dominica",
        "America/Edmonton",
        "America/Eirunepe",
        "America/El_Salvador",
        "America/Ensenada",
        "America/Fort_Nelson",
        "America/Fort_Wayne",
        "America/Fortaleza",
        "America/Glace_Bay",
        "America/Godthab",
        "America/Goose_Bay",
        "America/Grand_Turk",
        "America/Grenada",
        "America/Guadeloupe",
        "America/Guatemala",
        "America/Guayaquil",
        "America/Guyana",
        "America/Halifax",
        "America/Havana",
        "America/Hermosillo",
        "America/Indiana/Indianapolis",
        "America/Indiana/Knox",
        "America/Indiana/Marengo",
        "America/Indiana/Petersburg",
        "America/Indiana/Tell_City",
        "America/Indiana/Vevay",
        "America/Indiana/Vincennes",
        "America/Indiana/Winamac",
        "America/Indianapolis",
        "America/Inuvik",
        "America/Iqaluit",
        "America/Jamaica",
        "America/Jujuy",
        "America/Juneau",
        "America/Kentucky/Louisville",
        "America/Kentucky/Monticello",
        "America/Knox_IN",
        "America/Kralendijk",
        "America/La_Paz",
        "America/Lima",
        "America/Los_Angeles",
        "America/Louisville",
        "America/Lower_Princes",
        "America/Maceio",
        "America/Managua",
        "America/Manaus",
        "America/Marigot",
        "America/Martinique",
        "America/Matamoros",
        "America/Mazatlan",
        "America/Mendoza",
        "America/Menominee",
        "America/Merida",
        "America/Metlakatla",
        "America/Mexico_City",
        "America/Miquelon",
        "America/Moncton",
        "America/Monterrey",
        "America/Montevideo",
        "America/Montreal",
        "America/Montserrat",
        "America/Nassau",
        "America/New_York",
        "America/Nipigon",
        "America/Nome",
        "America/Noronha",
        "America/North_Dakota/Beulah",
        "America/North_Dakota/Center",
        "America/North_Dakota/New_Salem",
        "America/Nuuk",
        "America/Ojinaga",
        "America/Panama",
        "America/Pangnirtung",
        "America/Paramaribo",
        "America/Phoenix",
        "America/Port_of_Spain",
        "America/Port-au-Prince",
        "America/Porto_Acre",
        "America/Porto_Velho",
        "America/Puerto_Rico",
        "America/Punta_Arenas",
        "America/Rainy_River",
        "America/Rankin_Inlet",
        "America/Recife",
        "America/Regina",
        "America/Resolute",
        "America/Rio_Branco",
        "America/Rosario",
        "America/Santa_Isabel",
        "America/Santarem",
        "America/Santiago",
        "America/Santo_Domingo",
        "America/Sao_Paulo",
        "America/Scoresbysund",
        "America/Shiprock",
        "America/Sitka",
        "America/St_Barthelemy",
        "America/St_Johns",
        "America/St_Kitts",
        "America/St_Lucia",
        "America/St_Thomas",
        "America/St_Vincent",
        "America/Swift_Current",
        "America/Tegucigalpa",
        "America/Thule",
        "America/Thunder_Bay",
        "America/Tijuana",
        "America/Toronto",
        "America/Tortola",
        "America/Vancouver",
        "America/Virgin",
        "America/Whitehorse",
        "America/Winnipeg",
        "America/Yakutat",
        "America/Yellowknife",
        "Antarctica/Casey",
        "Antarctica/Davis",
        "Antarctica/DumontDUrville",
        "Antarctica/Macquarie",
        "Antarctica/Mawson",
        "Antarctica/McMurdo",
        "Antarctica/Palmer",
        "Antarctica/Rothera",
        "Antarctica/South_Pole",
        "Antarctica/Syowa",
        "Antarctica/Troll",
        "Antarctica/Vostok",
        "Arctic/Longyearbyen",
        "Asia/Aden",
        "Asia/Almaty",
        "Asia/Amman",
        "Asia/Anadyr",
        "Asia/Aqtau",
        "Asia/Aqtobe",
        "Asia/Ashgabat",
        "Asia/Ashkhabad",
        "Asia/Atyrau",
        "Asia/Baghdad",
        "Asia/Bahrain",
        "Asia/Baku",
        "Asia/Bangkok",
        "Asia/Barnaul",
        "Asia/Beirut",
        "Asia/Bishkek",
        "Asia/Brunei",
        "Asia/Calcutta",
        "Asia/Chita",
        "Asia/Choibalsan",
        "Asia/Chongqing",
        "Asia/Chungking",
        "Asia/Colombo",
        "Asia/Dacca",
        "Asia/Damascus",
        "Asia/Dhaka",
        "Asia/Dili",
        "Asia/Dubai",
        "Asia/Dushanbe",
        "Asia/Famagusta",
        "Asia/Gaza",
        "Asia/Harbin",
        "Asia/Hebron",
        "Asia/Ho_Chi_Minh",
        "Asia/Hong_Kong",
        "Asia/Hovd",
        "Asia/Irkutsk",
        "Asia/Istanbul",
        "Asia/Jakarta",
        "Asia/Jayapura",
        "Asia/Jerusalem",
        "Asia/Kabul",
        "Asia/Kamchatka",
        "Asia/Karachi",
        "Asia/Kashgar",
        "Asia/Kathmandu",
        "Asia/Katmandu",
        "Asia/Khandyga",
        "Asia/Kolkata",
        "Asia/Krasnoyarsk",
        "Asia/Kuala_Lumpur",
        "Asia/Kuching",
        "Asia/Kuwait",
        "Asia/Macao",
        "Asia/Macau",
        "Asia/Magadan",
        "Asia/Makassar",
        "Asia/Manila",
        "Asia/Muscat",
        "Asia/Nicosia",
        "Asia/Novokuznetsk",
        "Asia/Novosibirsk",
        "Asia/Omsk",
        "Asia/Oral",
        "Asia/Phnom_Penh",
        "Asia/Pontianak",
        "Asia/Pyongyang",
        "Asia/Qatar",
        "Asia/Qostanay",
        "Asia/Qyzylorda",
        "Asia/Rangoon",
        "Asia/Riyadh",
        "Asia/Saigon",
        "Asia/Sakhalin",
        "Asia/Samarkand",
        "Asia/Seoul",
        "Asia/Shanghai",
        "Asia/Singapore",
        "Asia/Srednekolymsk",
        "Asia/Taipei",
        "Asia/Tashkent",
        "Asia/Tbilisi",
        "Asia/Tehran",
        "Asia/Tel_Aviv",
        "Asia/Thimbu",
        "Asia/Thimphu",
        "Asia/Tokyo",
        "Asia/Tomsk",
        "Asia/Ujung_Pandang",
        "Asia/Ulaanbaatar",
        "Asia/Ulan_Bator",
        "Asia/Urumqi",
        "Asia/Ust-Nera",
        "Asia/Vientiane",
        "Asia/Vladivostok",
        "Asia/Yakutsk",
        "Asia/Yangon",
        "Asia/Yekaterinburg",
        "Asia/Yerevan",
        "Atlantic/Azores",
        "Atlantic/Bermuda",
        "Atlantic/Canary",
        "Atlantic/Cape_Verde",
        "Atlantic/Faeroe",
        "Atlantic/Faroe",
        "Atlantic/Jan_Mayen",
        "Atlantic/Madeira",
        "Atlantic/Reykjavik",
        "Atlantic/South_Georgia",
        "Atlantic/St_Helena",
        "Atlantic/Stanley",
        "Australia/ACT",
        "Australia/Adelaide",
        "Australia/Brisbane",
        "Australia/Broken_Hill",
        "Australia/Canberra",
        "Australia/Currie",
        "Australia/Darwin",
        "Australia/Eucla",
        "Australia/Hobart",
        "Australia/LHI",
        "Australia/Lindeman",
        "Australia/Lord_Howe",
        "Australia/Melbourne",
        "Australia/North",
        "Australia/NSW",
        "Australia/Perth",
        "Australia/Queensland",
        "Australia/South",
        "Australia/Sydney",
        "Australia/Tasmania",
        "Australia/Victoria",
        "Australia/West",
        "Australia/Yancowinna",
        "Brazil/Acre",
        "Brazil/DeNoronha",
        "Brazil/East",
        "Brazil/West",
        "Canada/Atlantic",
        "Canada/Central",
        "Canada/Eastern",
        "Canada/Mountain",
        "Canada/Newfoundland",
        "Canada/Pacific",
        "Canada/Saskatchewan",
        "Canada/Yukon",
        "CET",
        "Chile/Continental",
        "Chile/EasterIsland",
        "CST6CDT",
        "Cuba",
        "EET",
        "Egypt",
        "Eire",
        "EST",
        "EST5EDT",
        "Etc/GMT",
        "Etc/GMT-0",
        "Etc/GMT-1",
        "Etc/GMT-10",
        "Etc/GMT-11",
        "Etc/GMT-12",
        "Etc/GMT-13",
        "Etc/GMT-14",
        "Etc/GMT-2",
        "Etc/GMT-3",
        "Etc/GMT-4",
        "Etc/GMT-5",
        "Etc/GMT-6",
        "Etc/GMT-7",
        "Etc/GMT-8",
        "Etc/GMT-9",
        "Etc/GMT+0",
        "Etc/GMT+1",
        "Etc/GMT+10",
        "Etc/GMT+11",
        "Etc/GMT+12",
        "Etc/GMT+2",
        "Etc/GMT+3",
        "Etc/GMT+4",
        "Etc/GMT+5",
        "Etc/GMT+6",
        "Etc/GMT+7",
        "Etc/GMT+8",
        "Etc/GMT+9",
        "Etc/GMT0",
        "Etc/Greenwich",
        "Etc/UCT",
        "Etc/Universal",
        "Etc/UTC",
        "Etc/Zulu",
        "Europe/Amsterdam",
        "Europe/Andorra",
        "Europe/Astrakhan",
        "Europe/Athens",
        "Europe/Belfast",
        "Europe/Belgrade",
        "Europe/Berlin",
        "Europe/Bratislava",
        "Europe/Brussels",
        "Europe/Bucharest",
        "Europe/Budapest",
        "Europe/Busingen",
        "Europe/Chisinau",
        "Europe/Copenhagen",
        "Europe/Dublin",
        "Europe/Gibraltar",
        "Europe/Guernsey",
        "Europe/Helsinki",
        "Europe/Isle_of_Man",
        "Europe/Istanbul",
        "Europe/Jersey",
        "Europe/Kaliningrad",
        "Europe/Kiev",
        "Europe/Kirov",
        "Europe/Kyiv",
        "Europe/Lisbon",
        "Europe/Ljubljana",
        "Europe/London",
        "Europe/Luxembourg",
        "Europe/Madrid",
        "Europe/Malta",
        "Europe/Mariehamn",
        "Europe/Minsk",
        "Europe/Monaco",
        "Europe/Moscow",
        "Europe/Nicosia",
        "Europe/Oslo",
        "Europe/Paris",
        "Europe/Podgorica",
        "Europe/Prague",
        "Europe/Riga",
        "Europe/Rome",
        "Europe/Samara",
        "Europe/San_Marino",
        "Europe/Sarajevo",
        "Europe/Saratov",
        "Europe/Simferopol",
        "Europe/Skopje",
        "Europe/Sofia",
        "Europe/Stockholm",
        "Europe/Tallinn",
        "Europe/Tirane",
        "Europe/Tiraspol",
        "Europe/Ulyanovsk",
        "Europe/Uzhgorod",
        "Europe/Vaduz",
        "Europe/Vatican",
        "Europe/Vienna",
        "Europe/Vilnius",
        "Europe/Volgograd",
        "Europe/Warsaw",
        "Europe/Zagreb",
        "Europe/Zaporozhye",
        "Europe/Zurich",
        "GB",
        "GB-Eire",
        "GMT",
        "GMT-0",
        "GMT+0",
        "GMT0",
        "Greenwich",
        "Hongkong",
        "HST",
        "Iceland",
        "Indian/Antananarivo",
        "Indian/Chagos",
        "Indian/Christmas",
        "Indian/Cocos",
        "Indian/Comoro",
        "Indian/Kerguelen",
        "Indian/Mahe",
        "Indian/Maldives",
        "Indian/Mauritius",
        "Indian/Mayotte",
        "Indian/Reunion",
        "Iran",
        "Israel",
        "Jamaica",
        "Japan",
        "Kwajalein",
        "Libya",
        "MET",
        "Mexico/BajaNorte",
        "Mexico/BajaSur",
        "Mexico/General",
        "MST",
        "MST7MDT",
        "Navajo",
        "NZ",
        "NZ-CHAT",
        "Pacific/Apia",
        "Pacific/Auckland",
        "Pacific/Bougainville",
        "Pacific/Chatham",
        "Pacific/Chuuk",
        "Pacific/Easter",
        "Pacific/Efate",
        "Pacific/Enderbury",
        "Pacific/Fakaofo",
        "Pacific/Fiji",
        "Pacific/Funafuti",
        "Pacific/Galapagos",
        "Pacific/Gambier",
        "Pacific/Guadalcanal",
        "Pacific/Guam",
        "Pacific/Honolulu",
        "Pacific/Johnston",
        "Pacific/Kanton",
        "Pacific/Kiritimati",
        "Pacific/Kosrae",
        "Pacific/Kwajalein",
        "Pacific/Majuro",
        "Pacific/Marquesas",
        "Pacific/Midway",
        "Pacific/Nauru",
        "Pacific/Niue",
        "Pacific/Norfolk",
        "Pacific/Noumea",
        "Pacific/Pago_Pago",
        "Pacific/Palau",
        "Pacific/Pitcairn",
        "Pacific/Pohnpei",
        "Pacific/Ponape",
        "Pacific/Port_Moresby",
        "Pacific/Rarotonga",
        "Pacific/Saipan",
        "Pacific/Samoa",
        "Pacific/Tahiti",
        "Pacific/Tarawa",
        "Pacific/Tongatapu",
        "Pacific/Truk",
        "Pacific/Wake",
        "Pacific/Wallis",
        "Pacific/Yap",
        "Poland",
        "Portugal",
        "PRC",
        "PST8PDT",
        "ROC",
        "ROK",
        "Singapore",
        "Turkey",
        "UCT",
        "Universal",
        "US/Alaska",
        "US/Aleutian",
        "US/Arizona",
        "US/Central",
        "US/East-Indiana",
        "US/Eastern",
        "US/Hawaii",
        "US/Indiana-Starke",
        "US/Michigan",
        "US/Mountain",
        "US/Pacific",
        "US/Samoa",
        "UTC",
        "W-SU",
        "WET",
        "Zulu"
      ],
      "type": "string"
    },
    "UrlInput": {
      "additionalProperties": false,
      "properties": {
        "cascade": {
          "default": true,
          "description": "Specifies whether or not this input configuration should be merged with any matching, less specific configuration.",
          "markdownDescription": "Specifies whether or not this input configuration should be merged with any matching, less\nspecific configuration.",
          "type": "boolean"
        },
        "comment": {
          "description": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown: links, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "markdownDescription": "Changes the subtext below the _Label_. Has no default. Supports a limited set of Markdown:\nlinks, bold, italic, subscript, superscript, and inline code elements are allowed.",
          "type": "string"
        },
        "hidden": {
          "default": false,
          "description": "Toggles the visibility of this input.",
          "markdownDescription": "Toggles the visibility of this input.",
          "type": [
            "boolean",
            "string"
          ]
        },
        "instance_value": {
          "$ref": "#/definitions/InstanceValue",
          "description": "Controls if and how the value of this input is instantiated when created. This occurs when creating files, or adding array items containing the configured input.",
          "markdownDescription": "Controls if and how the value of this input is instantiated when created. This occurs when\ncreating files, or adding array items containing the configured input."
        },
        "label": {
          "description": "Optionally changes the text above this input.",
          "markdownDescription": "Optionally changes the text above this input.",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/UrlInputOptions",
          "description": "Options that are specific to this `type` of input.",
          "markdownDescription": "Options that are specific to this `type` of input."
        },
        "type": {
          "const": "range",
          "description": "Controls the type of input, changing how it is displayed and interacted with.",
          "markdownDescription": "Controls the type of input, changing how it is displayed and interacted with.",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "UrlInputOptions": {
      "additionalProperties": false,
      "properties": {
        "empty_type": {
          "$ref": "#/definitions/EmptyTypeText",
          "description": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values.",
          "markdownDescription": "Set how an ‘empty’ value will be saved. Does not apply to existing empty values."
        },
        "paths": {
          "$ref": "#/definitions/ReducedPaths",
          "description": "Paths to where new asset files are uploaded to. They also set the default path when choosing existing images, and linking to existing files. Each path is relative to global `source`. Defaults to the global `paths`.",
          "markdownDescription": "Paths to where new asset files are uploaded to. They also set the default path when choosing\nexisting images, and linking to existing files. Each path is relative to global `source`.\nDefaults to the global `paths`."
        }
      },
      "type": "object"
    },
    "interface-src_index.d.ts-1726-2559-src_index.d.ts-0-46800": {
      "additionalProperties": false,
      "properties": {
        "_inputs": {
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "markdownDescription": "Controls the behavior and appearance of your inputs in all data editing interfaces.",
          "type": "object"
        },
        "_select_data": {
          "additionalProperties": {
            "$ref": "#/definitions/SelectValues"
          },
          "description": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and _Multiselect_ inputs.",
          "markdownDescription": "Fixed datasets that can be referenced by the _Values_ configuration for _Select_ and\n_Multiselect_ inputs.",
          "type": "object"
        },
        "_structures": {
          "additionalProperties": {
            "$ref": "#/definitions/Structure"
          },
          "description": "Structured values for editors adding new items to arrays and objects. Entries here can be referenced in the configuration for `array` or `object` inputs.",
          "markdownDescription": "Structured values for editors adding new items to arrays and objects. Entries here can be\nreferenced in the configuration for `array` or `object` inputs.",
          "type": "object"
        },
        "alternate_formats": {
          "description": "Alternate configurations for this snippet.",
          "items": {
            "$ref": "#/definitions/interface-src_index.d.ts-1726-2559-src_index.d.ts-0-46800"
          },
          "markdownDescription": "Alternate configurations for this snippet.",
          "type": "array"
        },
        "definitions": {
          "description": "The variables required for the selected template.",
          "markdownDescription": "The variables required for the selected template.",
          "type": "object"
        },
        "inline": {
          "description": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat this snippet as a block-level element in the content editor.",
          "markdownDescription": "Whether this snippet can appear inline (within a sentence). Defaults to false, which will treat\nthis snippet as a block-level element in the content editor.",
          "type": "boolean"
        },
        "params": {
          "additionalProperties": {},
          "description": "The parameters of this snippet.",
          "markdownDescription": "The parameters of this snippet.",
          "type": "object"
        },
        "picker_preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS while being chosen.",
          "markdownDescription": "Changes the way items are previewed in the CMS while being chosen."
        },
        "preview": {
          "$ref": "#/definitions/Preview",
          "description": "Changes the way items are previewed in the CMS.",
          "markdownDescription": "Changes the way items are previewed in the CMS."
        },
        "snippet": {
          "description": "Name of the snippet.",
          "markdownDescription": "Name of the snippet.",
          "type": "string"
        },
        "strict_whitespace": {
          "description": "Whether this snippet treats whitespace as-is or not.",
          "markdownDescription": "Whether this snippet treats whitespace as-is or not.",
          "type": "boolean"
        },
        "template": {
          "description": "The template that this snippet should inherit, out of the available Shortcode Templates.",
          "markdownDescription": "The template that this snippet should inherit, out of the available Shortcode Templates.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}